'use strict';Object.defineProperty(exports,'__esModule',{value:true});function d(s,o){let{appName:e,loadingTheme:t,customTheme:n}=o,i=n||(t==="gradient"?"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);":"background: #2c3e50;");return `/**
 * AppBootstrap.js - Generated by app-bootstrap-lib
 * Created: ${new Date().toISOString()}
 */

(function() {
  'use strict';

  // Asset manifest
  window.ASSET_MANIFEST = ${JSON.stringify(s,null,2)};

  // Loading state
  window.APP_BOOTSTRAP_LOADING_STATE = {
    isLoaded: false,
    isLoading: true,
    progress: 0,
    currentChunk: '',
    loadedChunks: [],
    totalChunks: ${s.loadingSequence.js.length},
    error: null,
    startTime: Date.now()
  };

  // Event emitter
  window.APP_BOOTSTRAP_EVENTS = {
    listeners: {},
    on: function(event, callback) {
      if (!this.listeners[event]) this.listeners[event] = [];
      this.listeners[event].push(callback);
    },
    emit: function(event, data) {
      if (this.listeners[event]) {
        this.listeners[event].forEach(cb => cb(data));
      }
    }
  };

  // Loading screen
  function createLoadingScreen() {
    const loadingHTML = \`
      <div id="loading-screen" style="
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        ${i}
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        color: white;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        z-index: 9999;
      ">
        <div style="
          width: 40px;
          height: 40px;
          border: 4px solid rgba(255, 255, 255, 0.3);
          border-top: 4px solid white;
          border-radius: 50%;
          animation: spin 1s linear infinite;
          margin-bottom: 20px;
        "></div>
        <p id="loading-text">Loading ${e}...</p>
        <div id="loading-progress" style="
          width: 200px;
          height: 4px;
          background: rgba(255, 255, 255, 0.3);
          border-radius: 2px;
          margin-top: 10px;
          overflow: hidden;
        ">
          <div id="progress-bar" style="
            height: 100%;
            background: white;
            width: 0%;
            transition: width 0.3s ease;
          "></div>
        </div>
        <style>
          @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
          }
        </style>
      </div>
    \`;

    document.body.insertAdjacentHTML('afterbegin', loadingHTML);
  }

  // Load assets
  async function loadAssets() {
    const { loadingSequence } = window.ASSET_MANIFEST;
    const totalChunks = loadingSequence.js.length + loadingSequence.css.length;
    let loadedChunks = 0;

    // Load CSS first
    for (const cssFile of loadingSequence.css) {
      try {
        await loadCSS(window.ASSET_MANIFEST.css[cssFile]);
        loadedChunks++;
        updateProgress(loadedChunks, totalChunks);
      } catch (error) {
        console.error('Failed to load CSS:', cssFile, error);
      }
    }

    // Load JS
    for (const jsFile of loadingSequence.js) {
      try {
        await loadJS(window.ASSET_MANIFEST.js[jsFile]);
        loadedChunks++;
        updateProgress(loadedChunks, totalChunks);
      } catch (error) {
        console.error('Failed to load JS:', jsFile, error);
      }
    }

    // Complete
    window.APP_BOOTSTRAP_LOADING_STATE.isLoaded = true;
    window.APP_BOOTSTRAP_LOADING_STATE.isLoading = false;
    window.APP_BOOTSTRAP_READY = true;

    window.APP_BOOTSTRAP_EVENTS.emit('loading:complete');
    hideLoadingScreen();
  }

  function loadCSS(href) {
    return new Promise((resolve, reject) => {
      const link = document.createElement('link');
      link.rel = 'stylesheet';
      link.href = href;
      link.onload = () => resolve();
      link.onerror = () => reject(new Error('CSS load failed: ' + href));
      document.head.appendChild(link);
    });
  }

  function loadJS(src) {
    return new Promise((resolve, reject) => {
      const script = document.createElement('script');
      script.src = src;
      script.type = 'module'; // Load as ES module
      script.onload = () => resolve();
      script.onerror = () => reject(new Error('JS load failed: ' + src));
      document.head.appendChild(script);
    });
  }

  function updateProgress(loaded, total) {
    const progress = Math.round((loaded / total) * 100);
    window.APP_BOOTSTRAP_LOADING_STATE.progress = progress;

    const progressBar = document.getElementById('progress-bar');
    if (progressBar) {
      progressBar.style.width = progress + '%';
    }

    window.APP_BOOTSTRAP_EVENTS.emit('loading:progress', { progress });
  }

  function hideLoadingScreen() {
    const loadingScreen = document.getElementById('loading-screen');
    if (loadingScreen) {
      loadingScreen.style.display = 'none';
    }
  }

  // Initialize
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      createLoadingScreen();
      loadAssets();
    });
  } else {
    createLoadingScreen();
    loadAssets();
  }
})();
`}function p(s={}){return [c(s)]}function c(s){let o,e={enableGzip:false,debugMode:false,appName:"Application",loadingTheme:"gradient",customTheme:"",assetPrefix:"",bootstrapFileName:"AppBootstrap.js",...s};return {name:"enhanced-pwa-bootstrap",config(t){t.build||(t.build={}),t.build.cssCodeSplit=true,t.build.rollupOptions||(t.build.rollupOptions={}),t.build.rollupOptions.output||(t.build.rollupOptions.output={});let n=t.build.rollupOptions.output;return n.entryFileNames="[name].js",n.chunkFileNames="[name].js",n.assetFileNames=i=>{if(!i.name)return "[name].[ext]";let a=i.name.split("."),r=a[a.length-1];return /\.(css)$/.test(i.name)?`assets/[name].${r}`:"[name].[ext]"},e.debugMode&&(console.log("[enhanced-pwa-bootstrap] App name:",e.appName),console.log("[enhanced-pwa-bootstrap] Theme:",e.loadingTheme)),t},transformIndexHtml(t){console.log("[enhanced-pwa-bootstrap] \u{1F50D} Transforming index.html...");let n=t;return n.includes("AppBootstrap.js")||(n=n.replace("</head>",`  <script src="/${e.bootstrapFileName}"><\/script>
  </head>`)),console.log("[enhanced-pwa-bootstrap] \u2705 HTML transformation complete"),n},generateBundle(t,n){o=m(n,e.assetPrefix);let i=d(o,e);n[e.bootstrapFileName]={type:"chunk",fileName:e.bootstrapFileName,code:i,isEntry:false};let a=u(o,e,s);n["asset-manifest.js"]={type:"chunk",fileName:"asset-manifest.js",code:`window.__ASSET_MANIFEST__ = ${JSON.stringify(a,null,2)};`,isEntry:false};let r=s;if(r.generateUnifiedManifest){let l=f(a,r);n["unified-manifest.json"]={type:"asset",fileName:"unified-manifest.json",source:JSON.stringify(l,null,2)};}console.log("[enhanced-pwa-bootstrap] \u2705 Bundle generation complete");}}}function u(s,o,e){return {...s,buildInfo:{...s.buildInfo,appName:o.appName,compressionEnabled:o.enableGzip,plugin:"enhanced-pwa-bootstrap",spaHandlerCompatible:true,timestamp:Date.now()},spaHandler:{rootPath:"/",fallbackFile:"index.html",enableCompression:o.enableGzip,enableCaching:true,cacheMaxAge:86400,systemFiles:["AppBootstrap.js","asset-manifest.js","unified-manifest.json"]},pwa:{enabled:e.manifestIntegration?.includePWA||false,manifestFile:"manifest.webmanifest",serviceWorkerFile:"sw.js",workboxFile:"workbox-*.js"}}}function f(s,o){let e=[];return Object.keys(s.js).forEach(t=>{e.push({url:s.js[t],revision:null});}),Object.keys(s.css).forEach(t=>{e.push({url:s.css[t],revision:null});}),e.push({url:"/AppBootstrap.js",revision:null},{url:"/asset-manifest.js",revision:null},{url:"/unified-manifest.json",revision:null}),o.manifestIntegration?.includePWA&&e.push({url:"/manifest.webmanifest",revision:null},{url:"/sw.js",revision:null}),o.manifestIntegration?.customEntries&&e.push(...o.manifestIntegration.customEntries),{version:"1.0.0",timestamp:Date.now(),entries:e,metadata:{totalFiles:e.length,spaHandlerCompatible:true,pwaEnabled:o.manifestIntegration?.includePWA||false}}}function m(s,o=""){let e={},t={},n=0;for(let[i,a]of Object.entries(s)){let r=a,l=o?`${o}/${i}`:`/${i}`;i.endsWith(".js")?(e[i]=l,n+=r.code?.length||0):i.endsWith(".css")&&(t[i]=l,n+=r.source?.length||0);}return {js:e,css:t,loadingSequence:{js:Object.keys(e),css:Object.keys(t)},totalOriginalSize:n,buildInfo:{timestamp:Date.now(),version:"1.2.0",appName:"Enhanced PWA App",compressionEnabled:false,chunksGenerated:Object.keys(e).length,plugin:"enhanced-pwa-bootstrap"}}}var b=p;exports.default=b;exports.enhancedPWABootstrapPlugin=p;//# sourceMappingURL=vite-integration.js.map
//# sourceMappingURL=vite-integration.js.map