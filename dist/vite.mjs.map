{"version":3,"sources":["../src/vite-plugin-utils.ts","../src/vite.ts"],"names":["generateAppBootstrap","assetManifest","options","appName","loadingTheme","customTheme","themeCSS","DEFAULT_PRIORITIES","generateChunkConfiguration","customChunks","analyzeBuildOutput","bundle","priorities","assetPrefix","js","css","totalOriginalSize","fileName","file","fileInfo","filePath","loadingSequence","a","b","priorityA","priorityB","transformIndexHtml","html","bootstrapScript","result","appBootstrapPlugin","buildAssets","opts","config","output","assetInfo","info","ext","chunks","_options","appBootstrapContent"],"mappings":"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","file":"vite.mjs","sourcesContent":["/**\n * Vite Plugin Utilities\n * Created: 2024-07-31\n * Purpose: Shared utility functions for the Vite plugin\n */\n\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nexport function generateAppBootstrap(assetManifest: AssetManifest, options: Required<AppBootstrapOptions>): string {\n    const { appName, loadingTheme, customTheme } = options;\n\n    const themeCSS = customTheme || (loadingTheme === 'gradient'\n        ? 'background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);'\n        : 'background: #2c3e50;');\n\n    return `/**\n * AppBootstrap.js - Generated by app-bootstrap-lib\n * Created: ${new Date().toISOString()}\n */\n\n(function() {\n  'use strict';\n\n  // Asset manifest\n  window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};\n\n  // Loading state\n  window.APP_BOOTSTRAP_LOADING_STATE = {\n    isLoaded: false,\n    isLoading: true,\n    progress: 0,\n    currentChunk: '',\n    loadedChunks: [],\n    totalChunks: ${assetManifest.loadingSequence.js.length},\n    error: null,\n    startTime: Date.now()\n  };\n\n  // Event emitter\n  window.APP_BOOTSTRAP_EVENTS = {\n    listeners: {},\n    on: function(event, callback) {\n      if (!this.listeners[event]) this.listeners[event] = [];\n      this.listeners[event].push(callback);\n    },\n    emit: function(event, data) {\n      if (this.listeners[event]) {\n        this.listeners[event].forEach(cb => cb(data));\n      }\n    }\n  };\n\n  // Loading screen\n  function createLoadingScreen() {\n    const loadingHTML = \\`\n      <div id=\"loading-screen\" style=\"\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        ${themeCSS}\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        color: white;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        z-index: 9999;\n      \">\n        <div style=\"\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.3);\n          border-top: 4px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 20px;\n        \"></div>\n        <p id=\"loading-text\">Loading ${appName}...</p>\n        <div id=\"loading-progress\" style=\"\n          width: 200px;\n          height: 4px;\n          background: rgba(255, 255, 255, 0.3);\n          border-radius: 2px;\n          margin-top: 10px;\n          overflow: hidden;\n        \">\n          <div id=\"progress-bar\" style=\"\n            height: 100%;\n            background: white;\n            width: 0%;\n            transition: width 0.3s ease;\n          \"></div>\n        </div>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    \\`;\n\n    document.body.insertAdjacentHTML('afterbegin', loadingHTML);\n  }\n\n  // Load assets\n  async function loadAssets() {\n    const { loadingSequence } = window.ASSET_MANIFEST;\n    const totalChunks = loadingSequence.js.length + loadingSequence.css.length;\n    let loadedChunks = 0;\n\n    // Load CSS first\n    for (const cssFile of loadingSequence.css) {\n      try {\n        await loadCSS(window.ASSET_MANIFEST.css[cssFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load CSS:', cssFile, error);\n      }\n    }\n\n    // Load JS\n    for (const jsFile of loadingSequence.js) {\n      try {\n        await loadJS(window.ASSET_MANIFEST.js[jsFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load JS:', jsFile, error);\n      }\n    }\n\n    // Complete\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoaded = true;\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoading = false;\n    window.APP_BOOTSTRAP_READY = true;\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:complete');\n    hideLoadingScreen();\n  }\n\n  function loadCSS(href) {\n    return new Promise((resolve, reject) => {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = () => resolve();\n      link.onerror = () => reject(new Error('CSS load failed: ' + href));\n      document.head.appendChild(link);\n    });\n  }\n\n  function loadJS(src) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.type = 'module'; // Load as ES module\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error('JS load failed: ' + src));\n      document.head.appendChild(script);\n    });\n  }\n\n  function updateProgress(loaded, total) {\n    const progress = Math.round((loaded / total) * 100);\n    window.APP_BOOTSTRAP_LOADING_STATE.progress = progress;\n\n    const progressBar = document.getElementById('progress-bar');\n    if (progressBar) {\n      progressBar.style.width = progress + '%';\n    }\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:progress', { progress });\n  }\n\n  function hideLoadingScreen() {\n    const loadingScreen = document.getElementById('loading-screen');\n    if (loadingScreen) {\n      loadingScreen.style.display = 'none';\n    }\n  }\n\n  // Initialize\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      createLoadingScreen();\n      loadAssets();\n    });\n  } else {\n    createLoadingScreen();\n    loadAssets();\n  }\n})();\n`;\n}\n","/**\n * PWA Bootstrap Kit - Vite Plugin\n * Created: 2024-12-19\n * Updated: 2024-12-19\n * Purpose: Vite plugin integration for PWA bootstrap functionality.\n *          Provides automatic asset manifest generation, loading optimization, and PWA configuration.\n *          Separated Node.js-specific code to prevent bundling in client builds.\n */\n\nimport type { Plugin } from 'vite';\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nimport { generateAppBootstrap } from './vite-plugin-utils';\n\n\n// Default chunk priorities\nconst DEFAULT_PRIORITIES = {\n    'vendor': 1,\n    'main': 2,\n    'app': 3,\n    'chunk': 4\n};\n\n/**\n * Extended plugin options\n */\nexport interface PWAAppBootstrapOptions extends AppBootstrapOptions {\n}\n\n/**\n * Generate chunk configuration\n */\nfunction generateChunkConfiguration(customChunks: Record<string, string[]> = {}): Record<string, string[]> {\n    const chunks: Record<string, string[]> = {\n        vendor: ['react', 'react-dom'],\n        ...customChunks\n    };\n\n    return chunks;\n}\n\n/**\n * Analyze build output and create asset manifest\n */\nfunction analyzeBuildOutput(bundle: any, priorities: Record<string, number>, assetPrefix: string = ''): AssetManifest {\n    const js: Record<string, string> = {};\n    const css: Record<string, string> = {};\n    let totalOriginalSize = 0;\n\n    // Process bundle files\n    for (const [fileName, file] of Object.entries(bundle)) {\n        const fileInfo = file as any;\n        const filePath = assetPrefix ? `${assetPrefix}/${fileName}` : `/${fileName}`;\n\n        if (fileName.endsWith('.js')) {\n            js[fileName] = filePath;\n            totalOriginalSize += fileInfo.code?.length || 0;\n        } else if (fileName.endsWith('.css')) {\n            css[fileName] = filePath;\n            totalOriginalSize += fileInfo.source?.length || 0;\n        }\n    }\n\n    // Create loading sequence based on priorities\n    const loadingSequence = {\n        js: Object.keys(js).sort((a, b) => {\n            const priorityA = priorities[a] || 999;\n            const priorityB = priorities[b] || 999;\n            return priorityA - priorityB;\n        }),\n        css: Object.keys(css)\n    };\n\n    return {\n        js,\n        css,\n        loadingSequence,\n        totalOriginalSize,\n        buildInfo: {\n            timestamp: Date.now(),\n            version: '1.2.0',\n            appName: 'PWA App',\n            compressionEnabled: false,\n            chunksGenerated: Object.keys(js).length,\n            plugin: 'pwa-bootstrap-kit'\n        }\n    };\n}\n\n/**\n * Transform index.html to include bootstrap script and service worker registration\n */\nfunction transformIndexHtml(html: string, options: Required<AppBootstrapOptions>): string {\n    const bootstrapScript = `<script src=\"/${options.bootstrapFileName}\"></script>`;\n\n    let result = html;\n\n    // Remove development-specific scripts and main.tsx script\n    result = result.replace(/<script type=\"module\" src=\"\\/src\\/main\\.tsx\"><\\/script>/g, '');\n    result = result.replace(/<!-- Main Application Entry Point.*?-->/g, '');\n\n    // Remove development-specific script blocks\n    result = result.replace(/<!-- Development-specific scripts -->[\\s\\S]*?<\\/script>/g, '');\n\n    // Remove asset manifest script from body (it should be in head)\n    result = result.replace(/<!-- Asset Manifest.*?-->\\s*<script src=\"\\/asset-manifest\\.js\"><\\/script>/g, '');\n\n    // Insert before closing head tag\n    if (result.includes('</head>')) {\n        result = result.replace('</head>', `  ${bootstrapScript}\\n</head>`);\n    } else {\n        // Insert at the beginning if no head tag\n        result = bootstrapScript + '\\n' + result;\n    }\n\n    return result;\n}\n\n/**\n * Main Vite plugin function\n */\nexport default function appBootstrapPlugin(options: PWAAppBootstrapOptions = {}): Plugin {\n    let buildAssets: AssetManifest;\n\n    // Set defaults\n    const opts: Required<AppBootstrapOptions> = {\n        enableGzip: false,\n        enableProgress: true,\n        enableFallback: true,\n        debugMode: false,\n        appName: 'Application',\n        appIcon: '⚡',\n        loadingTheme: 'gradient',\n        customTheme: '',\n        enableCDNFallback: false,\n        compressionFirst: false,\n        customChunks: {},\n        chunkPriorities: {},\n        assetPrefix: '',\n        bootstrapFileName: 'AppBootstrap.js',\n        gzipLoaderConfig: {\n            debugMode: false,\n            useGzip: false,\n            fallbackToUncompressed: true,\n            timeout: 10000,\n            retries: 3\n        },\n        ...options\n    };\n\n    // Merge priorities\n    const priorities = { ...DEFAULT_PRIORITIES, ...opts.chunkPriorities };\n\n    return {\n        name: 'app-bootstrap-lib',\n\n\n\n        config(config) {\n            // Configure build options\n            if (!config.build) config.build = {};\n            config.build.cssCodeSplit = true;\n\n            // Configure rollup options\n            if (!config.build.rollupOptions) config.build.rollupOptions = {};\n            if (!config.build.rollupOptions.output) config.build.rollupOptions.output = {};\n\n            // Set predictable asset names\n            const output = config.build.rollupOptions.output as any;\n            output.entryFileNames = '[name].js';\n            output.chunkFileNames = '[name].js';\n            output.assetFileNames = (assetInfo: any) => {\n                if (!assetInfo.name) return '[name].[ext]';\n                const info = assetInfo.name.split('.');\n                const ext = info[info.length - 1];\n                if (/\\.(css)$/.test(assetInfo.name)) {\n                    return `assets/[name].${ext}`;\n                }\n                return '[name].[ext]';\n            };\n\n            // Generate chunks\n            const chunks = generateChunkConfiguration(opts.customChunks);\n            output.manualChunks = chunks;\n\n            if (opts.debugMode) {\n                console.log('[app-bootstrap-lib] App name:', opts.appName);\n                console.log('[app-bootstrap-lib] Theme:', opts.loadingTheme);\n            }\n\n            return config;\n        },\n\n        transformIndexHtml(html) {\n            console.log('[app-bootstrap-lib] 🔍 Transforming index.html...');\n            console.log('[app-bootstrap-lib] 📄 HTML length:', html.length);\n\n            const result = transformIndexHtml(html, opts);\n\n            console.log('[app-bootstrap-lib] ✅ HTML transformation complete');\n            console.log('[app-bootstrap-lib] 📄 Result length:', result.length);\n            console.log('[app-bootstrap-lib] 🔍 Contains AppBootstrap.js:', result.includes('AppBootstrap.js'));\n\n            return result;\n        },\n\n        generateBundle(_options: any, bundle: any) {\n            // Analyze build output\n            buildAssets = analyzeBuildOutput(bundle, priorities, opts.assetPrefix);\n\n            // Generate asset manifest\n            const assetManifest = {\n                ...buildAssets,\n                buildInfo: {\n                    ...buildAssets.buildInfo,\n                    appName: opts.appName,\n                    compressionEnabled: opts.enableGzip,\n                    plugin: 'pwa-bootstrap-kit'\n                }\n            };\n\n            // Add asset manifest to bundle\n            this.emitFile({\n                type: 'asset',\n                fileName: 'asset-manifest.js',\n                source: `window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};`\n            });\n\n            // Generate AppBootstrap.js\n            const appBootstrapContent = generateAppBootstrap(assetManifest, opts);\n\n            this.emitFile({\n                type: 'asset',\n                fileName: opts.bootstrapFileName,\n                source: appBootstrapContent\n            });\n\n\n\n            if (opts.debugMode) {\n                console.log(`[pwa-bootstrap-kit] ✅ Generated ${opts.bootstrapFileName}`);\n                console.log(`[pwa-bootstrap-kit] 📦 Assets: ${Object.keys(buildAssets.js).length} JS, ${Object.keys(buildAssets.css).length} CSS`);\n            }\n        }\n    };\n}\n\n// Named exports\nexport { appBootstrapPlugin };\n"]}