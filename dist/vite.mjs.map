{"version":3,"sources":["../src/vite-plugin-utils.ts","../src/workbox.ts","../src/vite.ts"],"names":["generateAppBootstrap","assetManifest","options","appName","loadingTheme","customTheme","themeCSS","DEFAULT_WORKBOX_OPTIONS","generateWorkboxServiceWorker","workboxOptions","opts","generateMinimalServiceWorker","cacheName","js","css","_assetManifest","generateServiceWorkerRegistration","generatePWAManifest","_workboxOptions","pwaConfig","manifestConfig","manifest","DEFAULT_PRIORITIES","generateChunkConfiguration","customChunks","analyzeBuildOutput","bundle","priorities","assetPrefix","totalOriginalSize","fileName","file","fileInfo","filePath","loadingSequence","a","b","priorityA","priorityB","transformIndexHtml","html","bootstrapScript","swRegistrationScript","result","scriptsToAdd","appBootstrapPlugin","buildAssets","config","output","assetInfo","info","ext","chunks","_options","appBootstrapContent","pwaEnabled","workboxEnabled","serviceWorkerContent","manifestContent","registrationScript"],"mappings":"AAQO,SAASA,CAAAA,CAAqBC,EAA8BC,CAAAA,CAAgD,CAC/G,GAAM,CAAE,OAAA,CAAAC,EAAS,YAAA,CAAAC,CAAAA,CAAc,YAAAC,CAAY,CAAA,CAAIH,EAEzCI,CAAAA,CAAWD,CAAAA,GAAgBD,IAAiB,UAAA,CAC5C,gEAAA,CACA,wBAEN,OAAO,CAAA;AAAA;AAAA,YAAA,EAEG,IAAI,IAAA,EAAK,CAAE,WAAA,EAAa;AAAA;;AAAA;AAAA;;AAAA;AAAA,0BAAA,EAOV,IAAA,CAAK,SAAA,CAAUH,CAAAA,CAAe,IAAA,CAAM,CAAC,CAAC,CAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAA,EAS/CA,CAAAA,CAAc,eAAA,CAAgB,EAAA,CAAG,MAAM,CAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAA,EA4BhDK,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAA,EAkBqBH,CAAO,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAsH9C,CC9JA,IAAMI,CAAAA,CAAoD,CACtD,QAAS,IAAA,CACT,eAAA,CAAiB,eAAA,CACjB,UAAA,CAAY,CACR,EAAA,CAAI,wBAAA,CACJ,GAAA,CAAK,yBACL,MAAA,CAAQ,aAAA,CACR,IAAA,CAAM,eAAA,CACN,GAAA,CAAK,eACT,CAAA,CACA,UAAA,CAAY,CACR,UAAA,CAAY,GAAA,CACZ,aAAA,CAAe,KACnB,CAAA,CACA,QAAA,CAAU,IAAA,CACV,cAAA,CAAgB,KACpB,CAAA,CAKO,SAASC,CAAAA,CACZP,CAAAA,CACAC,CAAAA,CACAO,CAAAA,CAAiC,EAAC,CAC5B,CACN,IAAMC,CAAAA,CAAO,CAAE,GAAGH,CAAAA,CAAyB,GAAGE,CAAe,CAAA,CAE7D,GAAI,CAACC,CAAAA,CAAK,OAAA,CACN,OAAOC,CAAAA,CAA6BV,CAAAA,CAAeC,CAAO,CAAA,CAG9D,IAAMU,CAAAA,CAAY,CAAA,EAAGF,CAAAA,CAAK,eAAe,MACnC,CAAE,OAAA,CAAAP,CAAQ,CAAA,CAAID,EAEpB,OAAO,CAAA;AAAA;AAAA,QAAA,EAEDC,CAAO;AAAA,YAAA,EACH,IAAI,IAAA,EAAK,CAAE,WAAA,EAAa;AAAA;;AAAA,oBAAA,EAGhBS,CAAS,CAAA;AAAA,sBAAA,EACPA,CAAS,CAAA;AAAA,uBAAA,EACRA,CAAS,CAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQhCX,CAAAA,CAAc,gBAAgB,EAAA,CAAG,GAAA,CAAIY,GAAM,CAAA,IAAA,EAAOA,CAAE,CAAA,EAAA,CAAI,CAAA,CAAE,IAAA,CAAK;AAAA,CAAI,CAAC;AAAA,EACpEZ,CAAAA,CAAc,gBAAgB,GAAA,CAAI,GAAA,CAAIa,GAAO,CAAA,IAAA,EAAOA,CAAG,CAAA,EAAA,CAAI,CAAA,CAAE,IAAA,CAAK;AAAA,CAAI,CAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kEAAA,EAiKLX,CAAO,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,wCAAA,EAWjCA,CAAO,CAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,CAcjD,CAKA,SAASQ,CAAAA,CACLI,CAAAA,CACAb,CAAAA,CACM,CACN,OAAO,CAAA;AAAA;AAAA,QAAA,EAEDA,EAAQ,OAAO;AAAA,YAAA,EACX,IAAI,IAAA,EAAK,CAAE,WAAA,EAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,CAyBtC,CAKO,SAASc,CAAAA,CACZd,CAAAA,CACAO,EAAiC,EAAC,CAC5B,CAGN,OAFa,CAAE,GAAGF,CAAAA,CAAyB,GAAGE,CAAe,EAEnD,OAAA,CAIH,CAAA;AAAA;AAAA,QAAA,EAEDP,EAAQ,OAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAA,CALV,EAwCf,CAKO,SAASe,EACZf,CAAAA,CACAgB,CAAAA,CAAkC,EAAC,CACnCC,CAAAA,CACM,CAEN,IAAMC,CAAAA,CAAiBD,GAAW,QAAA,EAAY,GAExCE,CAAAA,CAAW,CACb,KAAMD,CAAAA,CAAe,IAAA,EAAQlB,EAAQ,OAAA,EAAW,KAAA,CAChD,WAAYkB,CAAAA,CAAe,UAAA,EAAA,CAAelB,EAAQ,OAAA,EAAW,KAAA,EAAO,QAAQ,MAAA,CAAQ,EAAE,EAAE,SAAA,CAAU,CAAA,CAAG,EAAE,CAAA,CACvG,WAAA,CAAakB,EAAe,WAAA,EAAe,CAAA,QAAA,EAAWlB,EAAQ,OAAA,EAAW,KAAK,CAAA,qBAAA,CAAA,CAC9E,WAAA,CAAakB,EAAe,WAAA,GAAgBlB,CAAAA,CAAQ,eAAiB,UAAA,CAAa,SAAA,CAAY,WAC9F,gBAAA,CAAkBkB,CAAAA,CAAe,kBAAoB,SAAA,CACrD,OAAA,CAASA,EAAe,OAAA,EAAW,YAAA,CACnC,YAAaA,CAAAA,CAAe,WAAA,EAAe,WAC3C,KAAA,CAAOA,CAAAA,CAAe,OAAS,GAAA,CAC/B,SAAA,CAAWA,EAAe,SAAA,EAAa,GAAA,CACvC,MAAOA,CAAAA,CAAe,KAAA,EAAS,CAC3B,CACI,GAAA,CAAK,oBACL,KAAA,CAAO,SAAA,CACP,KAAM,WACV,CAAA,CACA,CACI,GAAA,CAAK,mBAAA,CACL,MAAO,SAAA,CACP,IAAA,CAAM,WACV,CAAA,CACA,CACI,GAAA,CAAK,mBAAA,CACL,MAAO,SAAA,CACP,IAAA,CAAM,YACN,OAAA,CAAS,UACb,CACJ,CAAA,CACA,UAAA,CAAY,CAAC,WAAA,CAAa,cAAc,EACxC,SAAA,CAAW,CACP,CACI,IAAA,CAAM,MAAA,CACN,WAAY,MAAA,CACZ,WAAA,CAAa,kBACb,GAAA,CAAK,GAAA,CACL,MAAO,CAAC,CAAE,IAAK,mBAAA,CAAqB,KAAA,CAAO,SAAU,CAAC,CAC1D,CACJ,CACJ,CAAA,CAEA,OAAO,IAAA,CAAK,SAAA,CAAUC,EAAU,IAAA,CAAM,CAAC,CAC3C,CCpZA,IAAMC,EAAqB,CACvB,MAAA,CAAU,EACV,IAAA,CAAQ,CAAA,CACR,IAAO,CAAA,CACP,KAAA,CAAS,CACb,CAAA,CAeA,SAASC,EAA2BC,CAAAA,CAAyC,GAA8B,CAMvG,OALyC,CACrC,MAAA,CAAQ,CAAC,QAAS,WAAW,CAAA,CAC7B,GAAGA,CACP,CAGJ,CAKA,SAASC,CAAAA,CAAmBC,EAAaC,CAAAA,CAAoCC,CAAAA,CAAsB,GAAmB,CAClH,IAAMf,EAA6B,EAAC,CAC9BC,EAA8B,EAAC,CACjCe,EAAoB,CAAA,CAGxB,IAAA,GAAW,CAACC,CAAAA,CAAUC,CAAI,CAAA,GAAK,MAAA,CAAO,QAAQL,CAAM,CAAA,CAAG,CACnD,IAAMM,CAAAA,CAAWD,EACXE,CAAAA,CAAWL,CAAAA,CAAc,GAAGA,CAAW,CAAA,CAAA,EAAIE,CAAQ,CAAA,CAAA,CAAK,CAAA,CAAA,EAAIA,CAAQ,CAAA,CAAA,CAEtEA,CAAAA,CAAS,SAAS,KAAK,CAAA,EACvBjB,EAAGiB,CAAQ,CAAA,CAAIG,EACfJ,CAAAA,EAAqBG,CAAAA,CAAS,MAAM,MAAA,EAAU,CAAA,EACvCF,EAAS,QAAA,CAAS,MAAM,IAC/BhB,CAAAA,CAAIgB,CAAQ,EAAIG,CAAAA,CAChBJ,CAAAA,EAAqBG,EAAS,MAAA,EAAQ,MAAA,EAAU,CAAA,EAExD,CAGA,IAAME,CAAAA,CAAkB,CACpB,GAAI,MAAA,CAAO,IAAA,CAAKrB,CAAE,CAAA,CAAE,IAAA,CAAK,CAACsB,CAAAA,CAAGC,CAAAA,GAAM,CAC/B,IAAMC,CAAAA,CAAYV,EAAWQ,CAAC,CAAA,EAAK,IAC7BG,CAAAA,CAAYX,CAAAA,CAAWS,CAAC,CAAA,EAAK,GAAA,CACnC,OAAOC,CAAAA,CAAYC,CACvB,CAAC,CAAA,CACD,GAAA,CAAK,OAAO,IAAA,CAAKxB,CAAG,CACxB,CAAA,CAEA,OAAO,CACH,EAAA,CAAAD,CAAAA,CACA,IAAAC,CAAAA,CACA,eAAA,CAAAoB,EACA,iBAAA,CAAAL,CAAAA,CACA,SAAA,CAAW,CACP,UAAW,IAAA,CAAK,GAAA,GAChB,OAAA,CAAS,OAAA,CACT,QAAS,SAAA,CACT,kBAAA,CAAoB,MACpB,eAAA,CAAiB,MAAA,CAAO,KAAKhB,CAAE,CAAA,CAAE,OACjC,MAAA,CAAQ,mBACZ,CACJ,CACJ,CAKA,SAAS0B,CAAAA,CAAmBC,CAAAA,CAActC,EAAwCiB,CAAAA,CAAuBV,CAAAA,CAA8B,CACnI,IAAMgC,CAAAA,CAAkB,iBAAiBvC,CAAAA,CAAQ,iBAAiB,eAG5DwC,CAAAA,CAAwBvB,CAAAA,EAAW,YAAc,KAAA,EAASV,CAAAA,EAAgB,UAAY,KAAA,CACtF,yCAAA,CACA,GAEFkC,CAAAA,CAASH,CAAAA,CAab,GAVAG,CAAAA,CAASA,CAAAA,CAAO,QAAQ,0DAAA,CAA4D,EAAE,EACtFA,CAAAA,CAASA,CAAAA,CAAO,QAAQ,0CAAA,CAA4C,EAAE,EAGtEA,CAAAA,CAASA,CAAAA,CAAO,QAAQ,0DAAA,CAA4D,EAAE,EAGtFA,CAAAA,CAASA,CAAAA,CAAO,QAAQ,4EAAA,CAA8E,EAAE,EAGpGA,CAAAA,CAAO,QAAA,CAAS,SAAS,CAAA,CAAG,CAC5B,IAAMC,CAAAA,CAAe,CAACH,CAAe,CAAA,CACjCC,CAAAA,EACAE,EAAa,IAAA,CAAKF,CAAoB,EAE1CC,CAAAA,CAASA,CAAAA,CAAO,QAAQ,SAAA,CAAW,CAAA,EAAA,EAAKC,EAAa,IAAA,CAAK;AAAA,EAAA,CAAM,CAAC;AAAA,OAAA,CAAW,EAChF,CAAA,KAAO,CAEH,IAAMA,EAAe,CAACH,CAAe,CAAA,CACjCC,CAAAA,EACAE,EAAa,IAAA,CAAKF,CAAoB,CAAA,CAE1CC,CAAAA,CAASC,EAAa,IAAA,CAAK;AAAA,CAAI,CAAA,CAAI;AAAA,CAAA,CAAOD,EAC9C,CAEA,OAAOA,CACX,CAKe,SAARE,CAAAA,CAAoC3C,CAAAA,CAAkC,EAAC,CAAW,CACrF,IAAI4C,CAAAA,CAGEpC,CAAAA,CAAsC,CACxC,UAAA,CAAY,KAAA,CAGZ,SAAA,CAAW,KAAA,CACX,OAAA,CAAS,aAAA,CAET,YAAA,CAAc,UAAA,CACd,WAAA,CAAa,EAAA,CAGb,YAAA,CAAc,EAAC,CACf,eAAA,CAAiB,EAAC,CAClB,WAAA,CAAa,EAAA,CACb,iBAAA,CAAmB,iBAAA,CAQnB,GAAGR,CACP,CAAA,CAGMyB,CAAAA,CAAa,CAAE,GAAGL,CAAAA,CAAoB,GAAGZ,EAAK,eAAgB,CAAA,CAEpE,OAAO,CACH,IAAA,CAAM,mBAAA,CAIN,OAAOqC,CAAAA,CAAQ,CAENA,CAAAA,CAAO,KAAA,GAAOA,CAAAA,CAAO,KAAA,CAAQ,EAAC,CAAA,CACnCA,CAAAA,CAAO,KAAA,CAAM,YAAA,CAAe,IAAA,CAGvBA,CAAAA,CAAO,MAAM,aAAA,GAAeA,CAAAA,CAAO,KAAA,CAAM,aAAA,CAAgB,EAAC,CAAA,CAC1DA,EAAO,KAAA,CAAM,aAAA,CAAc,MAAA,GAAQA,CAAAA,CAAO,KAAA,CAAM,aAAA,CAAc,OAAS,EAAC,CAAA,CAG7E,IAAMC,CAAAA,CAASD,CAAAA,CAAO,KAAA,CAAM,cAAc,MAAA,CAC1CC,CAAAA,CAAO,eAAiB,WAAA,CACxBA,CAAAA,CAAO,eAAiB,WAAA,CACxBA,CAAAA,CAAO,cAAA,CAAkBC,CAAAA,EAAmB,CACxC,GAAI,CAACA,CAAAA,CAAU,IAAA,CAAM,OAAO,cAAA,CAC5B,IAAMC,CAAAA,CAAOD,EAAU,IAAA,CAAK,KAAA,CAAM,GAAG,CAAA,CAC/BE,CAAAA,CAAMD,CAAAA,CAAKA,EAAK,MAAA,CAAS,CAAC,CAAA,CAChC,OAAI,UAAA,CAAW,IAAA,CAAKD,EAAU,IAAI,CAAA,CACvB,CAAA,cAAA,EAAiBE,CAAG,CAAA,CAAA,CAExB,cACX,EAGA,IAAMC,CAAAA,CAAS7B,CAAAA,CAA2Bb,CAAAA,CAAK,YAAY,CAAA,CAC3D,OAAAsC,CAAAA,CAAO,YAAA,CAAeI,CAAAA,CAElB1C,CAAAA,CAAK,SAAA,GACL,OAAA,CAAQ,IAAI,+BAAA,CAAiCA,CAAAA,CAAK,OAAO,CAAA,CACzD,OAAA,CAAQ,GAAA,CAAI,6BAA8BA,CAAAA,CAAK,YAAY,CAAA,CAAA,CAGxDqC,CACX,CAAA,CAEA,kBAAA,CAAmBP,EAAM,CACrB,OAAA,CAAQ,GAAA,CAAI,0DAAmD,CAAA,CAC/D,OAAA,CAAQ,IAAI,4CAAA,CAAuCA,CAAAA,CAAK,MAAM,CAAA,CAC9D,OAAA,CAAQ,GAAA,CAAI,iDAA2CtC,CAAAA,CAAQ,OAAA,EAAS,OAAO,CAAA,CAE/E,IAAMyC,CAAAA,CAASJ,EAAmBC,CAAAA,CAAM9B,CAAAA,CAAMR,CAAAA,CAAQ,GAAA,CAAKA,CAAAA,CAAQ,OAAO,EAE1E,OAAA,OAAA,CAAQ,GAAA,CAAI,yDAAoD,CAAA,CAChE,OAAA,CAAQ,GAAA,CAAI,+CAAyCyC,CAAAA,CAAO,MAAM,CAAA,CAClE,OAAA,CAAQ,GAAA,CAAI,yDAAA,CAAoDA,EAAO,QAAA,CAAS,iBAAiB,CAAC,CAAA,CAClG,OAAA,CAAQ,IAAI,uDAAA,CAAkDA,CAAAA,CAAO,QAAA,CAAS,eAAe,CAAC,CAAA,CAEvFA,CACX,CAAA,CAEA,cAAA,CAAeU,CAAAA,CAAe3B,CAAAA,CAAa,CAEvCoB,CAAAA,CAAcrB,EAAmBC,CAAAA,CAAQC,CAAAA,CAAYjB,CAAAA,CAAK,WAAW,CAAA,CAGrE,IAAMT,EAAgB,CAClB,GAAG6C,CAAAA,CACH,SAAA,CAAW,CACP,GAAGA,EAAY,SAAA,CACf,OAAA,CAASpC,CAAAA,CAAK,OAAA,CACd,kBAAA,CAAoBA,CAAAA,CAAK,WACzB,MAAA,CAAQ,mBACZ,CACJ,CAAA,CAGA,IAAA,CAAK,QAAA,CAAS,CACV,IAAA,CAAM,OAAA,CACN,QAAA,CAAU,mBAAA,CACV,MAAA,CAAQ,CAAA,wBAAA,EAA2B,KAAK,SAAA,CAAUT,CAAAA,CAAe,IAAA,CAAM,CAAC,CAAC,CAAA,CAAA,CAC7E,CAAC,CAAA,CAGD,IAAMqD,CAAAA,CAAsBtD,CAAAA,CAAqBC,CAAAA,CAAeS,CAAI,EAEpE,IAAA,CAAK,QAAA,CAAS,CACV,IAAA,CAAM,OAAA,CACN,QAAA,CAAUA,EAAK,iBAAA,CACf,MAAA,CAAQ4C,CACZ,CAAC,CAAA,CAGD,IAAMC,EAAarD,CAAAA,CAAQ,GAAA,EAAK,SAAA,GAAc,KAAA,CACxCsD,CAAAA,CAAiBtD,CAAAA,CAAQ,SAAS,OAAA,GAAY,KAAA,CAEpD,GAAIqD,CAAAA,EAAcC,CAAAA,CAAgB,CAC9B,IAAM/C,CAAAA,CAAiBP,CAAAA,CAAQ,OAAA,EAAW,EAAC,CACrCiB,CAAAA,CAAYjB,EAAQ,GAAA,EAAO,EAAC,CAG5BuD,CAAAA,CAAuBjD,CAAAA,CAA6BP,CAAAA,CAAeS,EAAMD,CAAc,CAAA,CAE7F,KAAK,QAAA,CAAS,CACV,KAAM,OAAA,CACN,QAAA,CAAU,OAAA,CACV,MAAA,CAAQgD,CACZ,CAAC,EAGD,IAAMC,CAAAA,CAAkBzC,CAAAA,CAAoBP,CAAAA,CAAMD,CAAAA,CAAgBU,CAAS,EAE3E,IAAA,CAAK,QAAA,CAAS,CACV,IAAA,CAAM,OAAA,CACN,QAAA,CAAU,uBACV,MAAA,CAAQuC,CACZ,CAAC,CAAA,CAGD,IAAMC,CAAAA,CAAqB3C,EAAkCN,CAAAA,CAAMD,CAAc,CAAA,CAC7EkD,CAAAA,EACA,IAAA,CAAK,QAAA,CAAS,CACV,IAAA,CAAM,OAAA,CACN,QAAA,CAAU,eAAA,CACV,MAAA,CAAQA,CACZ,CAAC,CAAA,CAGDjD,CAAAA,CAAK,SAAA,GACL,OAAA,CAAQ,GAAA,CAAI,gEAAyD,EACrE,OAAA,CAAQ,GAAA,CAAI,sDAA+C,CAAA,CAC3D,OAAA,CAAQ,GAAA,CAAI,yDAAkD,CAAA,EAEtE,CAAA,KAAWA,CAAAA,CAAK,SAAA,GACZ,OAAA,CAAQ,GAAA,CAAI,6DAAmD,CAAA,CAC1D6C,CAAAA,EAAY,OAAA,CAAQ,GAAA,CAAI,6CAA6C,CAAA,CACrEC,GAAgB,OAAA,CAAQ,GAAA,CAAI,0CAA0C,CAAA,CAAA,CAG3E9C,CAAAA,CAAK,SAAA,GACL,QAAQ,GAAA,CAAI,CAAA,qCAAA,EAAmCA,CAAAA,CAAK,iBAAiB,CAAA,CAAE,CAAA,CACvE,QAAQ,GAAA,CAAI,CAAA,sCAAA,EAAkC,MAAA,CAAO,IAAA,CAAKoC,CAAAA,CAAY,EAAE,EAAE,MAAM,CAAA,KAAA,EAAQ,MAAA,CAAO,IAAA,CAAKA,CAAAA,CAAY,GAAG,EAAE,MAAM,CAAA,IAAA,CAAM,CAAA,EAEzI,CACJ,CACJ","file":"vite.mjs","sourcesContent":["/**\n * Vite Plugin Utilities\n * Created: 2024-07-31\n * Purpose: Shared utility functions for the Vite plugin\n */\n\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nexport function generateAppBootstrap(assetManifest: AssetManifest, options: Required<AppBootstrapOptions>): string {\n    const { appName, loadingTheme, customTheme } = options;\n\n    const themeCSS = customTheme || (loadingTheme === 'gradient'\n        ? 'background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);'\n        : 'background: #2c3e50;');\n\n    return `/**\n * AppBootstrap.js - Generated by app-bootstrap-lib\n * Created: ${new Date().toISOString()}\n */\n\n(function() {\n  'use strict';\n\n  // Asset manifest\n  window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};\n\n  // Loading state\n  window.APP_BOOTSTRAP_LOADING_STATE = {\n    isLoaded: false,\n    isLoading: true,\n    progress: 0,\n    currentChunk: '',\n    loadedChunks: [],\n    totalChunks: ${assetManifest.loadingSequence.js.length},\n    error: null,\n    startTime: Date.now()\n  };\n\n  // Event emitter\n  window.APP_BOOTSTRAP_EVENTS = {\n    listeners: {},\n    on: function(event, callback) {\n      if (!this.listeners[event]) this.listeners[event] = [];\n      this.listeners[event].push(callback);\n    },\n    emit: function(event, data) {\n      if (this.listeners[event]) {\n        this.listeners[event].forEach(cb => cb(data));\n      }\n    }\n  };\n\n  // Loading screen\n  function createLoadingScreen() {\n    const loadingHTML = \\`\n      <div id=\"loading-screen\" style=\"\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        ${themeCSS}\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        color: white;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        z-index: 9999;\n      \">\n        <div style=\"\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.3);\n          border-top: 4px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 20px;\n        \"></div>\n        <p id=\"loading-text\">Loading ${appName}...</p>\n        <div id=\"loading-progress\" style=\"\n          width: 200px;\n          height: 4px;\n          background: rgba(255, 255, 255, 0.3);\n          border-radius: 2px;\n          margin-top: 10px;\n          overflow: hidden;\n        \">\n          <div id=\"progress-bar\" style=\"\n            height: 100%;\n            background: white;\n            width: 0%;\n            transition: width 0.3s ease;\n          \"></div>\n        </div>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    \\`;\n\n    document.body.insertAdjacentHTML('afterbegin', loadingHTML);\n  }\n\n  // Load assets\n  async function loadAssets() {\n    const { loadingSequence } = window.ASSET_MANIFEST;\n    const totalChunks = loadingSequence.js.length + loadingSequence.css.length;\n    let loadedChunks = 0;\n\n    // Load CSS first\n    for (const cssFile of loadingSequence.css) {\n      try {\n        await loadCSS(window.ASSET_MANIFEST.css[cssFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load CSS:', cssFile, error);\n      }\n    }\n\n    // Load JS\n    for (const jsFile of loadingSequence.js) {\n      try {\n        await loadJS(window.ASSET_MANIFEST.js[jsFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load JS:', jsFile, error);\n      }\n    }\n\n    // Complete\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoaded = true;\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoading = false;\n    window.APP_BOOTSTRAP_READY = true;\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:complete');\n    hideLoadingScreen();\n  }\n\n  function loadCSS(href) {\n    return new Promise((resolve, reject) => {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = () => resolve();\n      link.onerror = () => reject(new Error('CSS load failed: ' + href));\n      document.head.appendChild(link);\n    });\n  }\n\n  function loadJS(src) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.type = 'module'; // Load as ES module\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error('JS load failed: ' + src));\n      document.head.appendChild(script);\n    });\n  }\n\n  function updateProgress(loaded, total) {\n    const progress = Math.round((loaded / total) * 100);\n    window.APP_BOOTSTRAP_LOADING_STATE.progress = progress;\n\n    const progressBar = document.getElementById('progress-bar');\n    if (progressBar) {\n      progressBar.style.width = progress + '%';\n    }\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:progress', { progress });\n  }\n\n  function hideLoadingScreen() {\n    const loadingScreen = document.getElementById('loading-screen');\n    if (loadingScreen) {\n      loadingScreen.style.display = 'none';\n    }\n  }\n\n  // Initialize\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      createLoadingScreen();\n      loadAssets();\n    });\n  } else {\n    createLoadingScreen();\n    loadAssets();\n  }\n})();\n`;\n}\n","/**\n * Workbox Integration for App Bootstrap Library\n * Created: 2024-07-31\n * Purpose: Provides PWA functionality with service worker generation and caching strategies\n */\n\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nexport interface WorkboxOptions {\n    /** Enable/disable Workbox integration */\n    enabled?: boolean;\n    /** Cache name prefix */\n    cacheNamePrefix?: string;\n    /** Cache strategies for different file types */\n    strategies?: {\n        /** Strategy for JavaScript files */\n        js?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for CSS files */\n        css?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for images */\n        images?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for HTML files */\n        html?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for API calls */\n        api?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n    };\n    /** Cache expiration settings */\n    expiration?: {\n        /** Maximum number of entries in cache */\n        maxEntries?: number;\n        /** Maximum age in seconds */\n        maxAgeSeconds?: number;\n    };\n    /** Precache assets */\n    precache?: boolean;\n    /** Background sync for offline actions */\n    backgroundSync?: boolean;\n}\n\nconst DEFAULT_WORKBOX_OPTIONS: Required<WorkboxOptions> = {\n    enabled: true,\n    cacheNamePrefix: 'celebrity-box',\n    strategies: {\n        js: 'stale-while-revalidate',\n        css: 'stale-while-revalidate',\n        images: 'cache-first',\n        html: 'network-first',\n        api: 'network-first'\n    },\n    expiration: {\n        maxEntries: 100,\n        maxAgeSeconds: 86400 // 24 hours\n    },\n    precache: true,\n    backgroundSync: false\n};\n\n/**\n * Generate Workbox service worker content\n */\nexport function generateWorkboxServiceWorker(\n    assetManifest: AssetManifest,\n    options: AppBootstrapOptions,\n    workboxOptions: WorkboxOptions = {}\n): string {\n    const opts = { ...DEFAULT_WORKBOX_OPTIONS, ...workboxOptions };\n\n    if (!opts.enabled) {\n        return generateMinimalServiceWorker(assetManifest, options);\n    }\n\n    const cacheName = `${opts.cacheNamePrefix}-v1`;\n    const { appName } = options;\n\n    return `/**\n * Service Worker - Generated by @basirah/app-bootstrap-lib\n * App: ${appName}\n * Created: ${new Date().toISOString()}\n */\n\nconst CACHE_NAME = '${cacheName}';\nconst STATIC_CACHE = '${cacheName}-static';\nconst DYNAMIC_CACHE = '${cacheName}-dynamic';\n\n// Assets to precache\nconst PRECACHE_ASSETS = [\n  '/',\n  '/index.html',\n  '/AppBootstrap.js',\n  '/asset-manifest.js',\n${assetManifest.loadingSequence.js.map(js => `  '/${js}',`).join('\\n')}\n${assetManifest.loadingSequence.css.map(css => `  '/${css}',`).join('\\n')}\n];\n\n// Install event - precache assets\nself.addEventListener('install', (event) => {\n  console.log('[SW] Installing service worker...');\n  event.waitUntil(\n    caches.open(STATIC_CACHE)\n      .then((cache) => {\n        console.log('[SW] Pre-caching app shell');\n        return cache.addAll(PRECACHE_ASSETS);\n      })\n      .then(() => {\n        console.log('[SW] Successfully installed');\n        return self.skipWaiting();\n      })\n  );\n});\n\n// Activate event - clean up old caches\nself.addEventListener('activate', (event) => {\n  console.log('[SW] Activating service worker...');\n  event.waitUntil(\n    caches.keys()\n      .then((cacheNames) => {\n        return Promise.all(\n          cacheNames.map((cacheName) => {\n            if (cacheName !== STATIC_CACHE && cacheName !== DYNAMIC_CACHE) {\n              console.log('[SW] Deleting old cache:', cacheName);\n              return caches.delete(cacheName);\n            }\n          })\n        );\n      })\n      .then(() => {\n        console.log('[SW] Successfully activated');\n        return self.clients.claim();\n      })\n  );\n});\n\n// Fetch event - handle requests\nself.addEventListener('fetch', (event) => {\n  const { request } = event;\n  const url = new URL(request.url);\n\n  // Skip non-GET requests\n  if (request.method !== 'GET') {\n    return;\n  }\n\n  // Handle different file types with different strategies\n  if (url.pathname.endsWith('.js')) {\n    event.respondWith(handleJSRequest(request));\n  } else if (url.pathname.endsWith('.css')) {\n    event.respondWith(handleCSSRequest(request));\n  } else if (url.pathname.match(/\\\\.(png|jpg|jpeg|svg|gif|ico)$/)) {\n    event.respondWith(handleImageRequest(request));\n  } else if (url.pathname.startsWith('/api/')) {\n    event.respondWith(handleAPIRequest(request));\n  } else {\n    event.respondWith(handleHTMLRequest(request));\n  }\n});\n\n// Cache First strategy for images\nasync function handleImageRequest(request) {\n  try {\n    const cachedResponse = await caches.match(request);\n    if (cachedResponse) {\n      return cachedResponse;\n    }\n\n    const networkResponse = await fetch(request);\n    if (networkResponse.ok) {\n      const cache = await caches.open(DYNAMIC_CACHE);\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  } catch (error) {\n    console.error('[SW] Image fetch failed:', error);\n    return new Response('Image not available', { status: 404 });\n  }\n}\n\n// Stale While Revalidate for JS/CSS\nasync function handleJSRequest(request) {\n  return handleStaleWhileRevalidate(request, STATIC_CACHE);\n}\n\nasync function handleCSSRequest(request) {\n  return handleStaleWhileRevalidate(request, STATIC_CACHE);\n}\n\n// Network First for HTML\nasync function handleHTMLRequest(request) {\n  try {\n    const networkResponse = await fetch(request);\n    if (networkResponse.ok) {\n      const cache = await caches.open(DYNAMIC_CACHE);\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  } catch (error) {\n    console.log('[SW] Network failed, trying cache...');\n    const cachedResponse = await caches.match(request);\n    if (cachedResponse) {\n      return cachedResponse;\n    }\n    return caches.match('/index.html');\n  }\n}\n\n// Network First for API calls\nasync function handleAPIRequest(request) {\n  try {\n    const networkResponse = await fetch(request);\n    if (networkResponse.ok) {\n      const cache = await caches.open(DYNAMIC_CACHE);\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  } catch (error) {\n    console.log('[SW] API network failed, trying cache...');\n    return await caches.match(request);\n  }\n}\n\n// Stale While Revalidate strategy\nasync function handleStaleWhileRevalidate(request, cacheName) {\n  const cache = await caches.open(cacheName);\n  const cachedResponse = await cache.match(request);\n\n  const fetchPromise = fetch(request).then((networkResponse) => {\n    if (networkResponse.ok) {\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  }).catch(() => {\n    console.log('[SW] Network failed for:', request.url);\n  });\n\n  return cachedResponse || fetchPromise;\n}\n\n// Background sync for offline actions\nself.addEventListener('sync', (event) => {\n  if (event.tag === 'background-sync') {\n    console.log('[SW] Background sync triggered');\n    event.waitUntil(doBackgroundSync());\n  }\n});\n\nasync function doBackgroundSync() {\n  // Handle offline actions here\n  console.log('[SW] Processing background sync...');\n}\n\n// Push notifications\nself.addEventListener('push', (event) => {\n  const options = {\n    body: event.data ? event.data.text() : 'New notification from ${appName}',\n    icon: '/icon-192x192.png',\n    badge: '/icon-192x192.png',\n    vibrate: [100, 50, 100],\n    data: {\n      dateOfArrival: Date.now(),\n      primaryKey: 1\n    }\n  };\n\n  event.waitUntil(\n    self.registration.showNotification('${appName}', options)\n  );\n});\n\n// Notification click\nself.addEventListener('notificationclick', (event) => {\n  event.notification.close();\n  event.waitUntil(\n    clients.openWindow('/')\n  );\n});\n\nconsole.log('[SW] Service worker loaded successfully');\n`;\n}\n\n/**\n * Generate minimal service worker (fallback)\n */\nfunction generateMinimalServiceWorker(\n    _assetManifest: AssetManifest,\n    options: AppBootstrapOptions\n): string {\n    return `/**\n * Minimal Service Worker - Generated by @basirah/app-bootstrap-lib\n * App: ${options.appName}\n * Created: ${new Date().toISOString()}\n */\n\nself.addEventListener('install', (event) => {\n  console.log('[SW] Installing minimal service worker...');\n  self.skipWaiting();\n});\n\nself.addEventListener('activate', (event) => {\n  console.log('[SW] Activating minimal service worker...');\n  self.clients.claim();\n});\n\nself.addEventListener('fetch', (event) => {\n  // Basic caching for offline support\n  event.respondWith(\n    caches.match(event.request)\n      .then((response) => {\n        return response || fetch(event.request);\n      })\n  );\n});\n\nconsole.log('[SW] Minimal service worker loaded');\n`;\n}\n\n/**\n * Generate service worker registration script\n */\nexport function generateServiceWorkerRegistration(\n    options: AppBootstrapOptions,\n    workboxOptions: WorkboxOptions = {}\n): string {\n    const opts = { ...DEFAULT_WORKBOX_OPTIONS, ...workboxOptions };\n\n    if (!opts.enabled) {\n        return '';\n    }\n\n    return `/**\n * Service Worker Registration - Generated by @basirah/app-bootstrap-lib\n * App: ${options.appName}\n */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/sw.js')\n      .then((registration) => {\n        console.log('[SW] Registration successful:', registration.scope);\n\n        // Handle updates\n        registration.addEventListener('updatefound', () => {\n          const newWorker = registration.installing;\n          newWorker.addEventListener('statechange', () => {\n            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n              // New content is available\n              console.log('[SW] New content available');\n              // You can show a notification to the user here\n            }\n          });\n        });\n      })\n      .catch((error) => {\n        console.error('[SW] Registration failed:', error);\n      });\n  });\n}\n\n// Background sync registration\nif ('serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype) {\n  navigator.serviceWorker.ready.then((registration) => {\n    // Register background sync\n    registration.sync.register('background-sync');\n  });\n}\n`;\n}\n\n/**\n * Generate PWA manifest with Workbox integration\n */\nexport function generatePWAManifest(\n    options: AppBootstrapOptions,\n    _workboxOptions: WorkboxOptions = {},\n    pwaConfig?: any\n): string {\n    // Use PWA config if provided, otherwise use defaults\n    const manifestConfig = pwaConfig?.manifest || {};\n\n    const manifest = {\n        name: manifestConfig.name || options.appName || 'App',\n        short_name: manifestConfig.short_name || (options.appName || 'App').replace(/\\s+/g, '').substring(0, 12),\n        description: manifestConfig.description || `PWA for ${options.appName || 'App'} with offline support`,\n        theme_color: manifestConfig.theme_color || (options.loadingTheme === 'gradient' ? '#667eea' : '#2c3e50'),\n        background_color: manifestConfig.background_color || '#ffffff',\n        display: manifestConfig.display || 'standalone',\n        orientation: manifestConfig.orientation || 'portrait',\n        scope: manifestConfig.scope || '/',\n        start_url: manifestConfig.start_url || '/',\n        icons: manifestConfig.icons || [\n            {\n                src: '/icon-192x192.png',\n                sizes: '192x192',\n                type: 'image/png'\n            },\n            {\n                src: '/icon-512x512.png',\n                sizes: '512x512',\n                type: 'image/png'\n            },\n            {\n                src: '/icon-512x512.png',\n                sizes: '512x512',\n                type: 'image/png',\n                purpose: 'maskable'\n            }\n        ],\n        categories: ['utilities', 'productivity'],\n        shortcuts: [\n            {\n                name: 'Home',\n                short_name: 'Home',\n                description: 'Go to home page',\n                url: '/',\n                icons: [{ src: '/icon-192x192.png', sizes: '192x192' }]\n            }\n        ]\n    };\n\n    return JSON.stringify(manifest, null, 2);\n}\n","/**\n * PWA Bootstrap Kit - Vite Plugin\n * Created: 2024-12-19\n * Updated: 2024-12-19\n * Purpose: Vite plugin integration for PWA bootstrap functionality.\n *          Provides automatic asset manifest generation, loading optimization, and PWA configuration.\n *          Separated Node.js-specific code to prevent bundling in client builds.\n */\n\nimport type { Plugin } from 'vite';\nimport type { AppBootstrapOptions, AssetManifest } from './types';\nimport type { PWAConfig } from './pwa';\nimport { generateAppBootstrap } from './vite-plugin-utils';\nimport { generateWorkboxServiceWorker, generateServiceWorkerRegistration, generatePWAManifest, type WorkboxOptions } from './workbox';\n\n// Default chunk priorities\nconst DEFAULT_PRIORITIES = {\n    'vendor': 1,\n    'main': 2,\n    'app': 3,\n    'chunk': 4\n};\n\n/**\n * Extended plugin options including PWA configuration\n */\nexport interface PWAAppBootstrapOptions extends AppBootstrapOptions {\n    /** PWA-specific configuration */\n    pwa?: PWAConfig;\n    /** Workbox configuration */\n    workbox?: WorkboxOptions;\n}\n\n/**\n * Generate chunk configuration\n */\nfunction generateChunkConfiguration(customChunks: Record<string, string[]> = {}): Record<string, string[]> {\n    const chunks: Record<string, string[]> = {\n        vendor: ['react', 'react-dom'],\n        ...customChunks\n    };\n\n    return chunks;\n}\n\n/**\n * Analyze build output and create asset manifest\n */\nfunction analyzeBuildOutput(bundle: any, priorities: Record<string, number>, assetPrefix: string = ''): AssetManifest {\n    const js: Record<string, string> = {};\n    const css: Record<string, string> = {};\n    let totalOriginalSize = 0;\n\n    // Process bundle files\n    for (const [fileName, file] of Object.entries(bundle)) {\n        const fileInfo = file as any;\n        const filePath = assetPrefix ? `${assetPrefix}/${fileName}` : `/${fileName}`;\n\n        if (fileName.endsWith('.js')) {\n            js[fileName] = filePath;\n            totalOriginalSize += fileInfo.code?.length || 0;\n        } else if (fileName.endsWith('.css')) {\n            css[fileName] = filePath;\n            totalOriginalSize += fileInfo.source?.length || 0;\n        }\n    }\n\n    // Create loading sequence based on priorities\n    const loadingSequence = {\n        js: Object.keys(js).sort((a, b) => {\n            const priorityA = priorities[a] || 999;\n            const priorityB = priorities[b] || 999;\n            return priorityA - priorityB;\n        }),\n        css: Object.keys(css)\n    };\n\n    return {\n        js,\n        css,\n        loadingSequence,\n        totalOriginalSize,\n        buildInfo: {\n            timestamp: Date.now(),\n            version: '1.2.0',\n            appName: 'PWA App',\n            compressionEnabled: false,\n            chunksGenerated: Object.keys(js).length,\n            plugin: 'pwa-bootstrap-kit'\n        }\n    };\n}\n\n/**\n * Transform index.html to include bootstrap script and service worker registration\n */\nfunction transformIndexHtml(html: string, options: Required<AppBootstrapOptions>, pwaConfig?: PWAConfig, workboxOptions?: any): string {\n    const bootstrapScript = `<script src=\"/${options.bootstrapFileName}\"></script>`;\n\n    // Only include service worker registration if PWA is enabled\n    const swRegistrationScript = (pwaConfig?.enablePWA !== false && workboxOptions?.enabled !== false)\n        ? `<script src=\"/registerSW.js\"></script>`\n        : '';\n\n    let result = html;\n\n    // Remove development-specific scripts and main.tsx script\n    result = result.replace(/<script type=\"module\" src=\"\\/src\\/main\\.tsx\"><\\/script>/g, '');\n    result = result.replace(/<!-- Main Application Entry Point.*?-->/g, '');\n\n    // Remove development-specific script blocks\n    result = result.replace(/<!-- Development-specific scripts -->[\\s\\S]*?<\\/script>/g, '');\n\n    // Remove asset manifest script from body (it should be in head)\n    result = result.replace(/<!-- Asset Manifest.*?-->\\s*<script src=\"\\/asset-manifest\\.js\"><\\/script>/g, '');\n\n    // Insert before closing head tag\n    if (result.includes('</head>')) {\n        const scriptsToAdd = [bootstrapScript];\n        if (swRegistrationScript) {\n            scriptsToAdd.push(swRegistrationScript);\n        }\n        result = result.replace('</head>', `  ${scriptsToAdd.join('\\n  ')}\\n</head>`);\n    } else {\n        // Insert at the beginning if no head tag\n        const scriptsToAdd = [bootstrapScript];\n        if (swRegistrationScript) {\n            scriptsToAdd.push(swRegistrationScript);\n        }\n        result = scriptsToAdd.join('\\n') + '\\n' + result;\n    }\n\n    return result;\n}\n\n/**\n * Main Vite plugin function\n */\nexport default function appBootstrapPlugin(options: PWAAppBootstrapOptions = {}): Plugin {\n    let buildAssets: AssetManifest;\n\n    // Set defaults\n    const opts: Required<AppBootstrapOptions> = {\n        enableGzip: false,\n        enableProgress: true,\n        enableFallback: true,\n        debugMode: false,\n        appName: 'Application',\n        appIcon: '⚡',\n        loadingTheme: 'gradient',\n        customTheme: '',\n        enableCDNFallback: false,\n        compressionFirst: false,\n        customChunks: {},\n        chunkPriorities: {},\n        assetPrefix: '',\n        bootstrapFileName: 'AppBootstrap.js',\n        gzipLoaderConfig: {\n            debugMode: false,\n            useGzip: false,\n            fallbackToUncompressed: true,\n            timeout: 10000,\n            retries: 3\n        },\n        ...options\n    };\n\n    // Merge priorities\n    const priorities = { ...DEFAULT_PRIORITIES, ...opts.chunkPriorities };\n\n    return {\n        name: 'app-bootstrap-lib',\n\n\n\n        config(config) {\n            // Configure build options\n            if (!config.build) config.build = {};\n            config.build.cssCodeSplit = true;\n\n            // Configure rollup options\n            if (!config.build.rollupOptions) config.build.rollupOptions = {};\n            if (!config.build.rollupOptions.output) config.build.rollupOptions.output = {};\n\n            // Set predictable asset names\n            const output = config.build.rollupOptions.output as any;\n            output.entryFileNames = '[name].js';\n            output.chunkFileNames = '[name].js';\n            output.assetFileNames = (assetInfo: any) => {\n                if (!assetInfo.name) return '[name].[ext]';\n                const info = assetInfo.name.split('.');\n                const ext = info[info.length - 1];\n                if (/\\.(css)$/.test(assetInfo.name)) {\n                    return `assets/[name].${ext}`;\n                }\n                return '[name].[ext]';\n            };\n\n            // Generate chunks\n            const chunks = generateChunkConfiguration(opts.customChunks);\n            output.manualChunks = chunks;\n\n            if (opts.debugMode) {\n                console.log('[app-bootstrap-lib] App name:', opts.appName);\n                console.log('[app-bootstrap-lib] Theme:', opts.loadingTheme);\n            }\n\n            return config;\n        },\n\n        transformIndexHtml(html) {\n            console.log('[app-bootstrap-lib] 🔍 Transforming index.html...');\n            console.log('[app-bootstrap-lib] 📄 HTML length:', html.length);\n            console.log('[app-bootstrap-lib] 🔧 Workbox enabled:', options.workbox?.enabled);\n\n            const result = transformIndexHtml(html, opts, options.pwa, options.workbox);\n\n            console.log('[app-bootstrap-lib] ✅ HTML transformation complete');\n            console.log('[app-bootstrap-lib] 📄 Result length:', result.length);\n            console.log('[app-bootstrap-lib] 🔍 Contains AppBootstrap.js:', result.includes('AppBootstrap.js'));\n            console.log('[app-bootstrap-lib] 🔍 Contains registerSW.js:', result.includes('registerSW.js'));\n\n            return result;\n        },\n\n        generateBundle(_options: any, bundle: any) {\n            // Analyze build output\n            buildAssets = analyzeBuildOutput(bundle, priorities, opts.assetPrefix);\n\n            // Generate asset manifest\n            const assetManifest = {\n                ...buildAssets,\n                buildInfo: {\n                    ...buildAssets.buildInfo,\n                    appName: opts.appName,\n                    compressionEnabled: opts.enableGzip,\n                    plugin: 'pwa-bootstrap-kit'\n                }\n            };\n\n            // Add asset manifest to bundle\n            this.emitFile({\n                type: 'asset',\n                fileName: 'asset-manifest.js',\n                source: `window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};`\n            });\n\n            // Generate AppBootstrap.js\n            const appBootstrapContent = generateAppBootstrap(assetManifest, opts);\n\n            this.emitFile({\n                type: 'asset',\n                fileName: opts.bootstrapFileName,\n                source: appBootstrapContent\n            });\n\n            // Generate PWA assets if enabled\n            const pwaEnabled = options.pwa?.enablePWA !== false;\n            const workboxEnabled = options.workbox?.enabled !== false;\n\n            if (pwaEnabled && workboxEnabled) {\n                const workboxOptions = options.workbox || {};\n                const pwaConfig = options.pwa || {};\n\n                // Generate Workbox service worker\n                const serviceWorkerContent = generateWorkboxServiceWorker(assetManifest, opts, workboxOptions);\n\n                this.emitFile({\n                    type: 'asset',\n                    fileName: 'sw.js',\n                    source: serviceWorkerContent\n                });\n\n                // Generate PWA manifest with custom configuration\n                const manifestContent = generatePWAManifest(opts, workboxOptions, pwaConfig);\n\n                this.emitFile({\n                    type: 'asset',\n                    fileName: 'manifest.webmanifest',\n                    source: manifestContent\n                });\n\n                // Generate service worker registration script\n                const registrationScript = generateServiceWorkerRegistration(opts, workboxOptions);\n                if (registrationScript) {\n                    this.emitFile({\n                        type: 'asset',\n                        fileName: 'registerSW.js',\n                        source: registrationScript\n                    });\n                }\n\n                if (opts.debugMode) {\n                    console.log(`[pwa-bootstrap-kit] 🔧 Generated Workbox service worker`);\n                    console.log(`[pwa-bootstrap-kit] 📱 Generated PWA manifest`);\n                    console.log(`[pwa-bootstrap-kit] 🚀 PWA functionality enabled`);\n                }\n            } else if (opts.debugMode) {\n                console.log(`[pwa-bootstrap-kit] ⚠️ PWA functionality disabled`);\n                if (!pwaEnabled) console.log(`[pwa-bootstrap-kit]   - PWA config disabled`);\n                if (!workboxEnabled) console.log(`[pwa-bootstrap-kit]   - Workbox disabled`);\n            }\n\n            if (opts.debugMode) {\n                console.log(`[pwa-bootstrap-kit] ✅ Generated ${opts.bootstrapFileName}`);\n                console.log(`[pwa-bootstrap-kit] 📦 Assets: ${Object.keys(buildAssets.js).length} JS, ${Object.keys(buildAssets.css).length} CSS`);\n            }\n        }\n    };\n}\n\n// Named exports\nexport { appBootstrapPlugin };\n"]}