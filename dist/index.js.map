{"version":3,"sources":["../src/vite-plugin-utils.ts","../src/vite.ts","../src/vite-integration.ts","../src/react.ts","../src/cache.ts"],"names":["generateAppBootstrap","assetManifest","options","appName","loadingTheme","customTheme","themeCSS","DEFAULT_PRIORITIES","generateChunkConfiguration","customChunks","analyzeBuildOutput","bundle","priorities","assetPrefix","js","css","totalOriginalSize","fileName","file","fileInfo","filePath","loadingSequence","b","priorityA","priorityB","transformIndexHtml","html","bootstrapScript","result","appBootstrapPlugin","buildAssets","opts","config","output","assetInfo","info","ext","chunks","_options","appBootstrapContent","enhancedPWABootstrapPlugin","createBootstrapPlugin","enhancedManifest","generateEnhancedManifest","enhancedOptions","unifiedManifest","generateUnifiedManifest","entries","getAssetManifest","getLoadingState","isAppReady","getSPAHandlerConfig","getPWAConfig","getBuildInfo","getCompressionStatus","manifest","getSystemFiles","isSystemFile","filename","getAssetUrls","getSPAHandlerCompatibility","getCacheConfig","triggerAssetReload","getUnifiedManifest","response","error","onBootstrapEvent","event","callback","onLoadingProgress","onLoadingComplete","onAppReady","useAssetManifest","useLoadingState","useAppReady","useSPAHandlerConfig","usePWAConfig","useAssetReload","useBuildInfo","useCompressionStatus","useSystemFiles","useIsSystemFile","useAssetUrls","useUnifiedManifest","useSPAHandlerCompatibility","useCacheConfig","AppCacheManager","existingLoadingScreen","theme","loadingHTML","text","loadingText","checkAppReady","rootElement","pollInterval","message","initializeCacheManager","manager"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Vite Plugin Utilities\n * Created: 2024-07-31\n * Purpose: Shared utility functions for the Vite plugin\n */\n\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nexport function generateAppBootstrap(assetManifest: AssetManifest, options: Required<AppBootstrapOptions>): string {\n    const { appName, loadingTheme, customTheme } = options;\n\n    const themeCSS = customTheme || (loadingTheme === 'gradient'\n        ? 'background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);'\n        : 'background: #2c3e50;');\n\n    return `/**\n * AppBootstrap.js - Generated by app-bootstrap-lib\n * Created: ${new Date().toISOString()}\n */\n\n(function() {\n  'use strict';\n\n  // Asset manifest\n  window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};\n\n  // Loading state\n  window.APP_BOOTSTRAP_LOADING_STATE = {\n    isLoaded: false,\n    isLoading: true,\n    progress: 0,\n    currentChunk: '',\n    loadedChunks: [],\n    totalChunks: ${assetManifest.loadingSequence.js.length},\n    error: null,\n    startTime: Date.now()\n  };\n\n  // Event emitter\n  window.APP_BOOTSTRAP_EVENTS = {\n    listeners: {},\n    on: function(event, callback) {\n      if (!this.listeners[event]) this.listeners[event] = [];\n      this.listeners[event].push(callback);\n    },\n    emit: function(event, data) {\n      if (this.listeners[event]) {\n        this.listeners[event].forEach(cb => cb(data));\n      }\n    }\n  };\n\n  // Loading screen\n  function createLoadingScreen() {\n    const loadingHTML = \\`\n      <div id=\"loading-screen\" style=\"\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        ${themeCSS}\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        color: white;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        z-index: 9999;\n      \">\n        <div style=\"\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.3);\n          border-top: 4px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 20px;\n        \"></div>\n        <p id=\"loading-text\">Loading ${appName}...</p>\n        <div id=\"loading-progress\" style=\"\n          width: 200px;\n          height: 4px;\n          background: rgba(255, 255, 255, 0.3);\n          border-radius: 2px;\n          margin-top: 10px;\n          overflow: hidden;\n        \">\n          <div id=\"progress-bar\" style=\"\n            height: 100%;\n            background: white;\n            width: 0%;\n            transition: width 0.3s ease;\n          \"></div>\n        </div>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    \\`;\n\n    document.body.insertAdjacentHTML('afterbegin', loadingHTML);\n  }\n\n  // Load assets\n  async function loadAssets() {\n    const { loadingSequence } = window.ASSET_MANIFEST;\n    const totalChunks = loadingSequence.js.length + loadingSequence.css.length;\n    let loadedChunks = 0;\n\n    // Load CSS first\n    for (const cssFile of loadingSequence.css) {\n      try {\n        await loadCSS(window.ASSET_MANIFEST.css[cssFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load CSS:', cssFile, error);\n      }\n    }\n\n    // Load JS\n    for (const jsFile of loadingSequence.js) {\n      try {\n        await loadJS(window.ASSET_MANIFEST.js[jsFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load JS:', jsFile, error);\n      }\n    }\n\n    // Complete\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoaded = true;\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoading = false;\n    window.APP_BOOTSTRAP_READY = true;\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:complete');\n    hideLoadingScreen();\n  }\n\n  function loadCSS(href) {\n    return new Promise((resolve, reject) => {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = () => resolve();\n      link.onerror = () => reject(new Error('CSS load failed: ' + href));\n      document.head.appendChild(link);\n    });\n  }\n\n  function loadJS(src) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.type = 'module'; // Load as ES module\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error('JS load failed: ' + src));\n      document.head.appendChild(script);\n    });\n  }\n\n  function updateProgress(loaded, total) {\n    const progress = Math.round((loaded / total) * 100);\n    window.APP_BOOTSTRAP_LOADING_STATE.progress = progress;\n\n    const progressBar = document.getElementById('progress-bar');\n    if (progressBar) {\n      progressBar.style.width = progress + '%';\n    }\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:progress', { progress });\n  }\n\n  function hideLoadingScreen() {\n    const loadingScreen = document.getElementById('loading-screen');\n    if (loadingScreen) {\n      loadingScreen.style.display = 'none';\n    }\n  }\n\n  // Initialize\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      createLoadingScreen();\n      loadAssets();\n    });\n  } else {\n    createLoadingScreen();\n    loadAssets();\n  }\n})();\n`;\n}\n","/**\n * PWA Bootstrap Kit - Vite Plugin\n * Created: 2024-12-19\n * Updated: 2024-12-19\n * Purpose: Vite plugin integration for PWA bootstrap functionality.\n *          Provides automatic asset manifest generation, loading optimization, and PWA configuration.\n *          Separated Node.js-specific code to prevent bundling in client builds.\n */\n\nimport type { Plugin } from 'vite';\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nimport { generateAppBootstrap } from './vite-plugin-utils';\n\n\n// Default chunk priorities\nconst DEFAULT_PRIORITIES = {\n    'vendor': 1,\n    'main': 2,\n    'app': 3,\n    'chunk': 4\n};\n\n/**\n * Extended plugin options\n */\nexport interface PWAAppBootstrapOptions extends AppBootstrapOptions {\n}\n\n/**\n * Generate chunk configuration\n */\nfunction generateChunkConfiguration(customChunks: Record<string, string[]> = {}): Record<string, string[]> {\n    const chunks: Record<string, string[]> = {\n        vendor: ['react', 'react-dom'],\n        ...customChunks\n    };\n\n    return chunks;\n}\n\n/**\n * Analyze build output and create asset manifest\n */\nfunction analyzeBuildOutput(bundle: any, priorities: Record<string, number>, assetPrefix: string = ''): AssetManifest {\n    const js: Record<string, string> = {};\n    const css: Record<string, string> = {};\n    let totalOriginalSize = 0;\n\n    // Process bundle files\n    for (const [fileName, file] of Object.entries(bundle)) {\n        const fileInfo = file as any;\n        const filePath = assetPrefix ? `${assetPrefix}/${fileName}` : `/${fileName}`;\n\n        if (fileName.endsWith('.js')) {\n            js[fileName] = filePath;\n            totalOriginalSize += fileInfo.code?.length || 0;\n        } else if (fileName.endsWith('.css')) {\n            css[fileName] = filePath;\n            totalOriginalSize += fileInfo.source?.length || 0;\n        }\n    }\n\n    // Create loading sequence based on priorities\n    const loadingSequence = {\n        js: Object.keys(js).sort((a, b) => {\n            const priorityA = priorities[a] || 999;\n            const priorityB = priorities[b] || 999;\n            return priorityA - priorityB;\n        }),\n        css: Object.keys(css)\n    };\n\n    return {\n        js,\n        css,\n        loadingSequence,\n        totalOriginalSize,\n        buildInfo: {\n            timestamp: Date.now(),\n            version: '1.2.0',\n            appName: 'PWA App',\n            compressionEnabled: false,\n            chunksGenerated: Object.keys(js).length,\n            plugin: 'pwa-bootstrap-kit'\n        }\n    };\n}\n\n/**\n * Transform index.html to include bootstrap script and service worker registration\n */\nfunction transformIndexHtml(html: string, options: Required<AppBootstrapOptions>): string {\n    const bootstrapScript = `<script src=\"/${options.bootstrapFileName}\"></script>`;\n\n    let result = html;\n\n    // Remove development-specific scripts and main.tsx script\n    result = result.replace(/<script type=\"module\" src=\"\\/src\\/main\\.tsx\"><\\/script>/g, '');\n    result = result.replace(/<!-- Main Application Entry Point.*?-->/g, '');\n\n    // Remove development-specific script blocks\n    result = result.replace(/<!-- Development-specific scripts -->[\\s\\S]*?<\\/script>/g, '');\n\n    // Remove asset manifest script from body (it should be in head)\n    result = result.replace(/<!-- Asset Manifest.*?-->\\s*<script src=\"\\/asset-manifest\\.js\"><\\/script>/g, '');\n\n    // Insert before closing head tag\n    if (result.includes('</head>')) {\n        result = result.replace('</head>', `  ${bootstrapScript}\\n</head>`);\n    } else {\n        // Insert at the beginning if no head tag\n        result = bootstrapScript + '\\n' + result;\n    }\n\n    return result;\n}\n\n/**\n * Main Vite plugin function\n */\nexport default function appBootstrapPlugin(options: PWAAppBootstrapOptions = {}): Plugin {\n    let buildAssets: AssetManifest;\n\n    // Set defaults\n    const opts: Required<AppBootstrapOptions> = {\n        enableGzip: false,\n        enableProgress: true,\n        enableFallback: true,\n        debugMode: false,\n        appName: 'Application',\n        appIcon: '⚡',\n        loadingTheme: 'gradient',\n        customTheme: '',\n        enableCDNFallback: false,\n        compressionFirst: false,\n        customChunks: {},\n        chunkPriorities: {},\n        assetPrefix: '',\n        bootstrapFileName: 'AppBootstrap.js',\n        gzipLoaderConfig: {\n            debugMode: false,\n            useGzip: false,\n            fallbackToUncompressed: true,\n            timeout: 10000,\n            retries: 3\n        },\n        ...options\n    };\n\n    // Merge priorities\n    const priorities = { ...DEFAULT_PRIORITIES, ...opts.chunkPriorities };\n\n    return {\n        name: 'app-bootstrap-lib',\n\n\n\n        config(config) {\n            // Configure build options\n            if (!config.build) config.build = {};\n            config.build.cssCodeSplit = true;\n\n            // Configure rollup options\n            if (!config.build.rollupOptions) config.build.rollupOptions = {};\n            if (!config.build.rollupOptions.output) config.build.rollupOptions.output = {};\n\n            // Set predictable asset names\n            const output = config.build.rollupOptions.output as any;\n            output.entryFileNames = '[name].js';\n            output.chunkFileNames = '[name].js';\n            output.assetFileNames = (assetInfo: any) => {\n                if (!assetInfo.name) return '[name].[ext]';\n                const info = assetInfo.name.split('.');\n                const ext = info[info.length - 1];\n                if (/\\.(css)$/.test(assetInfo.name)) {\n                    return `assets/[name].${ext}`;\n                }\n                return '[name].[ext]';\n            };\n\n            // Generate chunks\n            const chunks = generateChunkConfiguration(opts.customChunks);\n            output.manualChunks = chunks;\n\n            if (opts.debugMode) {\n                console.log('[app-bootstrap-lib] App name:', opts.appName);\n                console.log('[app-bootstrap-lib] Theme:', opts.loadingTheme);\n            }\n\n            return config;\n        },\n\n        transformIndexHtml(html) {\n            console.log('[app-bootstrap-lib] 🔍 Transforming index.html...');\n            console.log('[app-bootstrap-lib] 📄 HTML length:', html.length);\n\n            const result = transformIndexHtml(html, opts);\n\n            console.log('[app-bootstrap-lib] ✅ HTML transformation complete');\n            console.log('[app-bootstrap-lib] 📄 Result length:', result.length);\n            console.log('[app-bootstrap-lib] 🔍 Contains AppBootstrap.js:', result.includes('AppBootstrap.js'));\n\n            return result;\n        },\n\n        generateBundle(_options: any, bundle: any) {\n            // Analyze build output\n            buildAssets = analyzeBuildOutput(bundle, priorities, opts.assetPrefix);\n\n            // Generate asset manifest\n            const assetManifest = {\n                ...buildAssets,\n                buildInfo: {\n                    ...buildAssets.buildInfo,\n                    appName: opts.appName,\n                    compressionEnabled: opts.enableGzip,\n                    plugin: 'pwa-bootstrap-kit'\n                }\n            };\n\n            // Add asset manifest to bundle\n            this.emitFile({\n                type: 'asset',\n                fileName: 'asset-manifest.js',\n                source: `window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};`\n            });\n\n            // Generate AppBootstrap.js\n            const appBootstrapContent = generateAppBootstrap(assetManifest, opts);\n\n            this.emitFile({\n                type: 'asset',\n                fileName: opts.bootstrapFileName,\n                source: appBootstrapContent\n            });\n\n\n\n            if (opts.debugMode) {\n                console.log(`[pwa-bootstrap-kit] ✅ Generated ${opts.bootstrapFileName}`);\n                console.log(`[pwa-bootstrap-kit] 📦 Assets: ${Object.keys(buildAssets.js).length} JS, ${Object.keys(buildAssets.css).length} CSS`);\n            }\n        }\n    };\n}\n\n// Named exports\nexport { appBootstrapPlugin };\n","/**\n * Enhanced Bootstrap Plugin - Server-Side Manifest Integration\n * Created: 2024-12-19\n * Purpose: Provides enhanced bootstrap functionality with unified manifest generation\n *          Works seamlessly with SPA handler and PWA plugin without runtime dependencies\n */\n\nimport type { Plugin } from 'vite';\nimport type { AppBootstrapOptions, AssetManifest } from './types';\nimport { generateAppBootstrap } from './vite-plugin-utils';\n\n/**\n * Enhanced plugin options for bootstrap functionality\n */\nexport interface EnhancedPWAOptions extends AppBootstrapOptions {\n    /** Generate unified manifest for SPA handler integration */\n    generateUnifiedManifest?: boolean;\n    /** Manifest integration options */\n    manifestIntegration?: {\n        /** Include PWA manifest entries */\n        includePWA?: boolean;\n        /** Include service worker entries */\n        includeSW?: boolean;\n        /** Custom manifest entries */\n        customEntries?: Array<{ url: string; revision?: string | null }>;\n    };\n}\n\n/**\n * Enhanced PWA Bootstrap Plugin - Bootstrap only, no PWA integration\n */\nexport function enhancedPWABootstrapPlugin(options: EnhancedPWAOptions = {}): Plugin[] {\n    return [createBootstrapPlugin(options)];\n}\n\n/**\n * Create the bootstrap plugin with enhanced functionality\n */\nfunction createBootstrapPlugin(options: AppBootstrapOptions): Plugin {\n    let buildAssets: AssetManifest;\n\n    // Set defaults\n    const opts: Required<AppBootstrapOptions> = {\n        enableGzip: false,\n        enableProgress: true,\n        enableFallback: true,\n        debugMode: false,\n        appName: 'Application',\n        appIcon: '⚡',\n        loadingTheme: 'gradient',\n        customTheme: '',\n        enableCDNFallback: false,\n        compressionFirst: false,\n        customChunks: {},\n        chunkPriorities: {},\n        assetPrefix: '',\n        bootstrapFileName: 'AppBootstrap.js',\n        gzipLoaderConfig: {\n            debugMode: false,\n            useGzip: false,\n            fallbackToUncompressed: true,\n            timeout: 10000,\n            retries: 3\n        },\n        ...options\n    };\n\n    return {\n        name: 'enhanced-pwa-bootstrap',\n\n        config(config) {\n            // Configure build options\n            if (!config.build) config.build = {};\n            config.build.cssCodeSplit = true;\n\n            // Configure rollup options\n            if (!config.build.rollupOptions) config.build.rollupOptions = {};\n            if (!config.build.rollupOptions.output) config.build.rollupOptions.output = {};\n\n            // Set predictable asset names\n            const output = config.build.rollupOptions.output as any;\n            output.entryFileNames = '[name].js';\n            output.chunkFileNames = '[name].js';\n            output.assetFileNames = (assetInfo: any) => {\n                if (!assetInfo.name) return '[name].[ext]';\n                const info = assetInfo.name.split('.');\n                const ext = info[info.length - 1];\n                if (/\\.(css)$/.test(assetInfo.name)) {\n                    return `assets/[name].${ext}`;\n                }\n                return '[name].[ext]';\n            };\n\n            if (opts.debugMode) {\n                console.log('[enhanced-pwa-bootstrap] App name:', opts.appName);\n                console.log('[enhanced-pwa-bootstrap] Theme:', opts.loadingTheme);\n            }\n\n            return config;\n        },\n\n        transformIndexHtml(html) {\n            console.log('[enhanced-pwa-bootstrap] 🔍 Transforming index.html...');\n\n            // Inject bootstrap script\n            let result = html;\n            if (!result.includes('AppBootstrap.js')) {\n                result = result.replace(\n                    '</head>',\n                    `  <script src=\"/${opts.bootstrapFileName}\"></script>\\n  </head>`\n                );\n            }\n\n            console.log('[enhanced-pwa-bootstrap] ✅ HTML transformation complete');\n            return result;\n        },\n\n        generateBundle(_options: any, bundle: any) {\n            // Analyze build output and create asset manifest\n            buildAssets = analyzeBuildOutput(bundle, opts.assetPrefix);\n\n            // Generate bootstrap script\n            const bootstrapScript = generateAppBootstrap(buildAssets, opts);\n\n            // Add bootstrap script to bundle\n            bundle[opts.bootstrapFileName] = {\n                type: 'chunk',\n                fileName: opts.bootstrapFileName,\n                code: bootstrapScript,\n                isEntry: false\n            };\n\n            // Generate enhanced asset manifest with SPA handler integration\n            const enhancedManifest = generateEnhancedManifest(buildAssets, opts, options);\n\n            // Add asset manifest to bundle\n            bundle['asset-manifest.js'] = {\n                type: 'chunk',\n                fileName: 'asset-manifest.js',\n                code: `window.__ASSET_MANIFEST__ = ${JSON.stringify(enhancedManifest, null, 2)};`,\n                isEntry: false\n            };\n\n            // Generate unified manifest for SPA handler\n            const enhancedOptions = options as EnhancedPWAOptions;\n            if (enhancedOptions.generateUnifiedManifest) {\n                const unifiedManifest = generateUnifiedManifest(enhancedManifest, enhancedOptions);\n                bundle['unified-manifest.json'] = {\n                    type: 'asset',\n                    fileName: 'unified-manifest.json',\n                    source: JSON.stringify(unifiedManifest, null, 2)\n                };\n            }\n\n            console.log('[enhanced-pwa-bootstrap] ✅ Bundle generation complete');\n        }\n    };\n}\n\n/**\n * Generate enhanced asset manifest with SPA handler integration\n */\nfunction generateEnhancedManifest(assetManifest: AssetManifest, opts: Required<AppBootstrapOptions>, options: EnhancedPWAOptions): AssetManifest {\n    const enhancedManifest = {\n        ...assetManifest,\n        buildInfo: {\n            ...assetManifest.buildInfo,\n            appName: opts.appName,\n            compressionEnabled: opts.enableGzip,\n            plugin: 'enhanced-pwa-bootstrap',\n            spaHandlerCompatible: true,\n            timestamp: Date.now()\n        },\n        // SPA Handler specific metadata\n        spaHandler: {\n            rootPath: '/',\n            fallbackFile: 'index.html',\n            enableCompression: opts.enableGzip,\n            enableCaching: true,\n            cacheMaxAge: 86400, // 24 hours\n            systemFiles: [\n                'AppBootstrap.js',\n                'asset-manifest.js',\n                'unified-manifest.json'\n            ]\n        },\n        // PWA integration metadata\n        pwa: {\n            enabled: options.manifestIntegration?.includePWA || false,\n            manifestFile: 'manifest.webmanifest',\n            serviceWorkerFile: 'sw.js',\n            workboxFile: 'workbox-*.js'\n        }\n    };\n\n    return enhancedManifest;\n}\n\n/**\n * Generate unified manifest for SPA handler\n */\nfunction generateUnifiedManifest(enhancedManifest: AssetManifest, options: EnhancedPWAOptions) {\n    const entries: Array<{ url: string; revision?: string | null }> = [];\n\n    // Add all JS and CSS files\n    Object.keys(enhancedManifest.js).forEach(file => {\n        entries.push({ url: enhancedManifest.js[file], revision: null });\n    });\n\n    Object.keys(enhancedManifest.css).forEach(file => {\n        entries.push({ url: enhancedManifest.css[file], revision: null });\n    });\n\n    // Add system files\n    entries.push(\n        { url: '/AppBootstrap.js', revision: null },\n        { url: '/asset-manifest.js', revision: null },\n        { url: '/unified-manifest.json', revision: null }\n    );\n\n    // Add PWA files if enabled\n    if (options.manifestIntegration?.includePWA) {\n        entries.push(\n            { url: '/manifest.webmanifest', revision: null },\n            { url: '/sw.js', revision: null }\n        );\n    }\n\n    // Add custom entries\n    if (options.manifestIntegration?.customEntries) {\n        entries.push(...options.manifestIntegration.customEntries);\n    }\n\n    return {\n        version: '1.0.0',\n        timestamp: Date.now(),\n        entries,\n        metadata: {\n            totalFiles: entries.length,\n            spaHandlerCompatible: true,\n            pwaEnabled: options.manifestIntegration?.includePWA || false\n        }\n    };\n}\n\n/**\n * Analyze build output and create asset manifest\n */\nfunction analyzeBuildOutput(bundle: any, assetPrefix: string = ''): AssetManifest {\n    const js: Record<string, string> = {};\n    const css: Record<string, string> = {};\n    let totalOriginalSize = 0;\n\n    // Process bundle files\n    for (const [fileName, file] of Object.entries(bundle)) {\n        const fileInfo = file as any;\n        const filePath = assetPrefix ? `${assetPrefix}/${fileName}` : `/${fileName}`;\n\n        if (fileName.endsWith('.js')) {\n            js[fileName] = filePath;\n            totalOriginalSize += fileInfo.code?.length || 0;\n        } else if (fileName.endsWith('.css')) {\n            css[fileName] = filePath;\n            totalOriginalSize += fileInfo.source?.length || 0;\n        }\n    }\n\n    return {\n        js,\n        css,\n        loadingSequence: {\n            js: Object.keys(js),\n            css: Object.keys(css)\n        },\n        totalOriginalSize,\n        buildInfo: {\n            timestamp: Date.now(),\n            version: '1.2.0',\n            appName: 'Enhanced PWA App',\n            compressionEnabled: false,\n            chunksGenerated: Object.keys(js).length,\n            plugin: 'enhanced-pwa-bootstrap'\n        }\n    };\n}\n\n// Export the main plugin function\nexport default enhancedPWABootstrapPlugin;\n","/**\n * Runtime-Free Manifest Access System\n * Created: 2024-12-19\n * Purpose: Provides manifest access without React dependencies\n *          Works with any framework or vanilla JavaScript\n */\n\n// Types for the enhanced manifest\ninterface EnhancedAssetManifest {\n    js: Record<string, string>;\n    css: Record<string, string>;\n    loadingSequence: {\n        js: string[];\n        css: string[];\n    };\n    buildInfo: {\n        appName: string;\n        compressionEnabled: boolean;\n        spaHandlerCompatible: boolean;\n        timestamp: number;\n    };\n    spaHandler: {\n        rootPath: string;\n        fallbackFile: string;\n        enableCompression: boolean;\n        enableCaching: boolean;\n        cacheMaxAge: number;\n        systemFiles: string[];\n    };\n    pwa: {\n        enabled: boolean;\n        manifestFile: string;\n        serviceWorkerFile: string;\n        workboxFile: string;\n    };\n}\n\ninterface LoadingState {\n    isLoaded: boolean;\n    isLoading: boolean;\n    progress: number;\n    currentChunk: string;\n    loadedChunks: string[];\n    totalChunks: number;\n    error: string | null;\n    startTime: number;\n}\n\ninterface BootstrapEvents {\n    on: (event: string, callback: (data: any) => void) => void;\n    emit: (event: string, data: any) => void;\n}\n\n// Global types for the bootstrap system\ndeclare global {\n    interface Window {\n        ASSET_MANIFEST: EnhancedAssetManifest;\n        APP_BOOTSTRAP_LOADING_STATE: LoadingState;\n        APP_BOOTSTRAP_EVENTS: BootstrapEvents;\n        APP_BOOTSTRAP_READY: boolean;\n    }\n}\n\n// Runtime-free manifest access functions\nexport function getAssetManifest(): EnhancedAssetManifest | null {\n    return window.ASSET_MANIFEST || null;\n}\n\nexport function getLoadingState(): LoadingState | null {\n    return window.APP_BOOTSTRAP_LOADING_STATE || null;\n}\n\nexport function isAppReady(): boolean {\n    return window.APP_BOOTSTRAP_READY === true;\n}\n\nexport function getSPAHandlerConfig() {\n    const manifest = getAssetManifest();\n    return manifest?.spaHandler || null;\n}\n\nexport function getPWAConfig() {\n    const manifest = getAssetManifest();\n    return manifest?.pwa || null;\n}\n\nexport function getBuildInfo() {\n    const manifest = getAssetManifest();\n    return manifest?.buildInfo || null;\n}\n\nexport function getCompressionStatus() {\n    const manifest = getAssetManifest();\n    return {\n        enabled: manifest?.buildInfo.compressionEnabled || false,\n        spaHandlerEnabled: manifest?.spaHandler.enableCompression || false\n    };\n}\n\nexport function getSystemFiles() {\n    const manifest = getAssetManifest();\n    return manifest?.spaHandler.systemFiles || [];\n}\n\nexport function isSystemFile(filename: string): boolean {\n    const systemFiles = getSystemFiles();\n    return systemFiles.includes(filename);\n}\n\nexport function getAssetUrls() {\n    const manifest = getAssetManifest();\n    return {\n        js: manifest?.js || {},\n        css: manifest?.css || {},\n        loadingSequence: manifest?.loadingSequence || { js: [], css: [] }\n    };\n}\n\nexport function getSPAHandlerCompatibility() {\n    const manifest = getAssetManifest();\n    return {\n        compatible: manifest?.buildInfo.spaHandlerCompatible || false,\n        rootPath: manifest?.spaHandler.rootPath || '/',\n        fallbackFile: manifest?.spaHandler.fallbackFile || 'index.html'\n    };\n}\n\nexport function getCacheConfig() {\n    const manifest = getAssetManifest();\n    return {\n        enabled: manifest?.spaHandler.enableCaching || false,\n        maxAge: manifest?.spaHandler.cacheMaxAge || 86400\n    };\n}\n\nexport function triggerAssetReload() {\n    if (window.APP_BOOTSTRAP_EVENTS) {\n        window.APP_BOOTSTRAP_EVENTS.emit('reload:requested', { timestamp: Date.now() });\n    }\n}\n\nexport async function getUnifiedManifest() {\n    try {\n        const response = await fetch('/unified-manifest.json');\n        if (response.ok) {\n            return await response.json();\n        }\n    } catch (error) {\n        console.warn('Failed to fetch unified manifest:', error);\n    }\n    return null;\n}\n\n// Event listener utilities for framework integration\nexport function onBootstrapEvent(event: string, callback: (data: any) => void) {\n    if (window.APP_BOOTSTRAP_EVENTS) {\n        window.APP_BOOTSTRAP_EVENTS.on(event, callback);\n    }\n}\n\nexport function onLoadingProgress(callback: (data: { progress: number }) => void) {\n    onBootstrapEvent('loading:progress', callback);\n}\n\nexport function onLoadingComplete(callback: () => void) {\n    onBootstrapEvent('loading:complete', callback);\n}\n\nexport function onAppReady(callback: () => void) {\n    if (isAppReady()) {\n        callback();\n    } else {\n        onLoadingComplete(callback);\n    }\n}\n\n// React-like hooks for framework compatibility\n// These are just wrappers around the runtime-free functions\nexport function useAssetManifest(): EnhancedAssetManifest | null {\n    return getAssetManifest();\n}\n\nexport function useLoadingState(): LoadingState | null {\n    return getLoadingState();\n}\n\nexport function useAppReady(): boolean {\n    return isAppReady();\n}\n\nexport function useSPAHandlerConfig() {\n    return getSPAHandlerConfig();\n}\n\nexport function usePWAConfig() {\n    return getPWAConfig();\n}\n\nexport function useAssetReload() {\n    return triggerAssetReload;\n}\n\nexport function useBuildInfo() {\n    return getBuildInfo();\n}\n\nexport function useCompressionStatus() {\n    return getCompressionStatus();\n}\n\nexport function useSystemFiles() {\n    return getSystemFiles();\n}\n\nexport function useIsSystemFile() {\n    return isSystemFile;\n}\n\nexport function useAssetUrls() {\n    return getAssetUrls();\n}\n\nexport function useUnifiedManifest() {\n    // This would need to be implemented with React's useState/useEffect\n    // For now, return a promise-based approach\n    return getUnifiedManifest();\n}\n\nexport function useSPAHandlerCompatibility() {\n    return getSPAHandlerCompatibility();\n}\n\nexport function useCacheConfig() {\n    return getCacheConfig();\n}\n\n// Default export with all functions\nexport default {\n    // Runtime-free functions\n    getAssetManifest,\n    getLoadingState,\n    isAppReady,\n    getSPAHandlerConfig,\n    getPWAConfig,\n    getBuildInfo,\n    getCompressionStatus,\n    getSystemFiles,\n    isSystemFile,\n    getAssetUrls,\n    getSPAHandlerCompatibility,\n    getCacheConfig,\n    triggerAssetReload,\n    getUnifiedManifest,\n\n    // Event utilities\n    onBootstrapEvent,\n    onLoadingProgress,\n    onLoadingComplete,\n    onAppReady,\n\n    // React-like hooks (for compatibility)\n    useAssetManifest,\n    useLoadingState,\n    useAppReady,\n    useSPAHandlerConfig,\n    usePWAConfig,\n    useAssetReload,\n    useBuildInfo,\n    useCompressionStatus,\n    useSystemFiles,\n    useIsSystemFile,\n    useAssetUrls,\n    useUnifiedManifest,\n    useSPAHandlerCompatibility,\n    useCacheConfig\n};\n","/**\n * Simplified Cache Manager\n * Created: 2024-12-19\n * Purpose: Unified cache management for app bootstrap\n */\n\nimport type { CacheManagerConfig, CacheManager } from './types';\n\nexport class AppCacheManager implements CacheManager {\n    private loadingElement: HTMLElement | null;\n    private config: CacheManagerConfig;\n\n    constructor(config: CacheManagerConfig = {}) {\n        this.config = {\n            cacheName: 'app-bootstrap-v1',\n            appVersion: '1.0.0',\n            enableServiceWorker: true,\n            loadingScreen: {\n                theme: 'gradient'\n            },\n            ...config\n        };\n\n        this.loadingElement = null;\n    }\n\n    async init(): Promise<void> {\n        console.log('App Cache Manager initializing...');\n\n        // Check if loading screen already exists to prevent duplicates\n        const existingLoadingScreen = document.getElementById('loading-screen');\n        if (!existingLoadingScreen) {\n            this.setupLoadingScreen();\n        } else {\n            this.loadingElement = existingLoadingScreen;\n        }\n\n        await this.loadApp();\n    }\n\n    private setupLoadingScreen(): void {\n        const theme = this.config.loadingScreen?.theme || 'gradient';\n        const customHTML = this.config.loadingScreen?.customHTML;\n\n        const loadingHTML = customHTML || this.getDefaultLoadingHTML(theme);\n        document.body.insertAdjacentHTML('afterbegin', loadingHTML);\n        this.loadingElement = document.getElementById('loading-screen');\n    }\n\n    private getDefaultLoadingHTML(theme: string): string {\n        const baseStyles = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      color: white;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      z-index: 9999;\n    `;\n\n        const background = theme === 'gradient'\n            ? 'background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);'\n            : 'background: #2c3e50;';\n\n        return `\n      <div id=\"loading-screen\" style=\"${baseStyles} ${background}\">\n        <div style=\"\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.3);\n          border-top: 4px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 20px;\n        \"></div>\n        <p id=\"loading-text\">Loading Application...</p>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    `;\n    }\n\n    updateLoadingText(text: string): void {\n        const loadingText = document.getElementById('loading-text');\n        if (loadingText) {\n            loadingText.textContent = text;\n        }\n    }\n\n    private async loadApp(): Promise<void> {\n        this.updateLoadingText('Loading application...');\n\n        // Wait for React app to be ready, then hide loading screen\n        const checkAppReady = () => {\n            const rootElement = document.getElementById('root');\n            if (rootElement && rootElement.children.length > 0) {\n                // Check if React app has rendered content\n                const appContent = rootElement.querySelector('.app, .home-page, .system-config-page, .video-player-page');\n                if (appContent) {\n                    console.log('[CacheManager] App content detected, hiding loading screen');\n                    this.hideLoadingScreen();\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Try immediately\n        if (checkAppReady()) return;\n\n        // Poll for app content\n        const pollInterval = setInterval(() => {\n            if (checkAppReady()) {\n                clearInterval(pollInterval);\n            }\n        }, 100);\n\n        // Fallback timeout\n        setTimeout(() => {\n            clearInterval(pollInterval);\n            console.log('[CacheManager] Fallback timeout, hiding loading screen');\n            this.hideLoadingScreen();\n        }, 3000);\n    }\n\n    hideLoadingScreen(): void {\n        if (this.loadingElement) {\n            this.loadingElement.style.opacity = '0';\n            this.loadingElement.style.transition = 'opacity 0.3s ease-out';\n            setTimeout(() => {\n                if (this.loadingElement && this.loadingElement.parentNode) {\n                    this.loadingElement.parentNode.removeChild(this.loadingElement);\n                }\n            }, 300);\n        }\n    }\n\n    showError(message: string): void {\n        if (this.loadingElement) {\n            this.loadingElement.innerHTML = `\n        <div style=\"text-align: center;\">\n          <h3>Error</h3>\n          <p>${message}</p>\n          <button onclick=\"location.reload()\" style=\"\n            background: white;\n            color: #667eea;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            margin-top: 10px;\n          \">Retry</button>\n        </div>\n      `;\n        }\n    }\n\n    retry(): void {\n        location.reload();\n    }\n\n    // Service Worker registration - removed to simplify\n}\n\n// Auto-initialize when DOM is ready\nexport function initializeCacheManager(config?: CacheManagerConfig): AppCacheManager {\n    const manager = new AppCacheManager(config);\n\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => {\n            manager.init();\n        });\n    } else {\n        manager.init();\n    }\n\n    return manager;\n}\n\n// Default export\nexport default AppCacheManager;\n"]}