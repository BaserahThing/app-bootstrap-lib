{"version":3,"sources":["../src/vite-plugin-utils.ts","../src/workbox.ts","../src/vite.ts","../src/react.ts","../src/cache.ts","../src/pwa.ts"],"names":["generateAppBootstrap","assetManifest","options","appName","loadingTheme","customTheme","themeCSS","DEFAULT_WORKBOX_OPTIONS","generateWorkboxServiceWorker","workboxOptions","opts","generateMinimalServiceWorker","cacheName","js","css","_assetManifest","generateServiceWorkerRegistration","generatePWAManifest","_workboxOptions","pwaConfig","manifestConfig","manifest","DEFAULT_PRIORITIES","generateChunkConfiguration","customChunks","analyzeBuildOutput","bundle","priorities","assetPrefix","totalOriginalSize","fileName","file","fileInfo","filePath","loadingSequence","b","priorityA","priorityB","transformIndexHtml","html","bootstrapScript","swRegistrationScript","result","scriptsToAdd","appBootstrapPlugin","buildAssets","config","output","assetInfo","info","ext","chunks","_options","appBootstrapContent","pwaEnabled","workboxEnabled","serviceWorkerContent","manifestContent","registrationScript","AppBootstrapEvents","event","callback","cb","data","appBootstrapEvents","getAssetManifest","isAppBootstrapReady","getCurrentLoadingState","useAppBootstrap","loadingState","setLoadingState","useState","setAssetManifest","error","setError","isReady","useRef","useEffect","currentState","currentManifest","prev","unsubscribeStart","_event","unsubscribeProgress","unsubscribeComplete","unsubscribeError","errorMessage","unsubscribeManifestLoaded","pollInterval","checkDevReady","rootElement","timeout","retry","useCallback","getChunkProgress","chunkName","getOverallProgress","useAppBootstrapStatus","useAppBootstrapWithConfig","AppCacheManager","existingLoadingScreen","theme","loadingHTML","text","loadingText","checkAppReady","message","initializeCacheManager","manager","PWAManager","registration","newWorker","installButton","dismissButton","outcome","updatePrompt","updateButton","initializePWA","pwaManager","createPWAManifest"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Vite Plugin Utilities\n * Created: 2024-07-31\n * Purpose: Shared utility functions for the Vite plugin\n */\n\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nexport function generateAppBootstrap(assetManifest: AssetManifest, options: Required<AppBootstrapOptions>): string {\n    const { appName, loadingTheme, customTheme } = options;\n\n    const themeCSS = customTheme || (loadingTheme === 'gradient'\n        ? 'background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);'\n        : 'background: #2c3e50;');\n\n    return `/**\n * AppBootstrap.js - Generated by app-bootstrap-lib\n * Created: ${new Date().toISOString()}\n */\n\n(function() {\n  'use strict';\n\n  // Asset manifest\n  window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};\n\n  // Loading state\n  window.APP_BOOTSTRAP_LOADING_STATE = {\n    isLoaded: false,\n    isLoading: true,\n    progress: 0,\n    currentChunk: '',\n    loadedChunks: [],\n    totalChunks: ${assetManifest.loadingSequence.js.length},\n    error: null,\n    startTime: Date.now()\n  };\n\n  // Event emitter\n  window.APP_BOOTSTRAP_EVENTS = {\n    listeners: {},\n    on: function(event, callback) {\n      if (!this.listeners[event]) this.listeners[event] = [];\n      this.listeners[event].push(callback);\n    },\n    emit: function(event, data) {\n      if (this.listeners[event]) {\n        this.listeners[event].forEach(cb => cb(data));\n      }\n    }\n  };\n\n  // Loading screen\n  function createLoadingScreen() {\n    const loadingHTML = \\`\n      <div id=\"loading-screen\" style=\"\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        ${themeCSS}\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        color: white;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        z-index: 9999;\n      \">\n        <div style=\"\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.3);\n          border-top: 4px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 20px;\n        \"></div>\n        <p id=\"loading-text\">Loading ${appName}...</p>\n        <div id=\"loading-progress\" style=\"\n          width: 200px;\n          height: 4px;\n          background: rgba(255, 255, 255, 0.3);\n          border-radius: 2px;\n          margin-top: 10px;\n          overflow: hidden;\n        \">\n          <div id=\"progress-bar\" style=\"\n            height: 100%;\n            background: white;\n            width: 0%;\n            transition: width 0.3s ease;\n          \"></div>\n        </div>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    \\`;\n\n    document.body.insertAdjacentHTML('afterbegin', loadingHTML);\n  }\n\n  // Load assets\n  async function loadAssets() {\n    const { loadingSequence } = window.ASSET_MANIFEST;\n    const totalChunks = loadingSequence.js.length + loadingSequence.css.length;\n    let loadedChunks = 0;\n\n    // Load CSS first\n    for (const cssFile of loadingSequence.css) {\n      try {\n        await loadCSS(window.ASSET_MANIFEST.css[cssFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load CSS:', cssFile, error);\n      }\n    }\n\n    // Load JS\n    for (const jsFile of loadingSequence.js) {\n      try {\n        await loadJS(window.ASSET_MANIFEST.js[jsFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load JS:', jsFile, error);\n      }\n    }\n\n    // Complete\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoaded = true;\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoading = false;\n    window.APP_BOOTSTRAP_READY = true;\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:complete');\n    hideLoadingScreen();\n  }\n\n  function loadCSS(href) {\n    return new Promise((resolve, reject) => {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = () => resolve();\n      link.onerror = () => reject(new Error('CSS load failed: ' + href));\n      document.head.appendChild(link);\n    });\n  }\n\n  function loadJS(src) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.type = 'module'; // Load as ES module\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error('JS load failed: ' + src));\n      document.head.appendChild(script);\n    });\n  }\n\n  function updateProgress(loaded, total) {\n    const progress = Math.round((loaded / total) * 100);\n    window.APP_BOOTSTRAP_LOADING_STATE.progress = progress;\n\n    const progressBar = document.getElementById('progress-bar');\n    if (progressBar) {\n      progressBar.style.width = progress + '%';\n    }\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:progress', { progress });\n  }\n\n  function hideLoadingScreen() {\n    const loadingScreen = document.getElementById('loading-screen');\n    if (loadingScreen) {\n      loadingScreen.style.display = 'none';\n    }\n  }\n\n  // Initialize\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      createLoadingScreen();\n      loadAssets();\n    });\n  } else {\n    createLoadingScreen();\n    loadAssets();\n  }\n})();\n`;\n}\n","/**\n * Workbox Integration for App Bootstrap Library\n * Created: 2024-07-31\n * Purpose: Provides PWA functionality with service worker generation and caching strategies\n */\n\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nexport interface WorkboxOptions {\n    /** Enable/disable Workbox integration */\n    enabled?: boolean;\n    /** Cache name prefix */\n    cacheNamePrefix?: string;\n    /** Cache strategies for different file types */\n    strategies?: {\n        /** Strategy for JavaScript files */\n        js?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for CSS files */\n        css?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for images */\n        images?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for HTML files */\n        html?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for API calls */\n        api?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n    };\n    /** Cache expiration settings */\n    expiration?: {\n        /** Maximum number of entries in cache */\n        maxEntries?: number;\n        /** Maximum age in seconds */\n        maxAgeSeconds?: number;\n    };\n    /** Precache assets */\n    precache?: boolean;\n    /** Background sync for offline actions */\n    backgroundSync?: boolean;\n}\n\nconst DEFAULT_WORKBOX_OPTIONS: Required<WorkboxOptions> = {\n    enabled: true,\n    cacheNamePrefix: 'celebrity-box',\n    strategies: {\n        js: 'stale-while-revalidate',\n        css: 'stale-while-revalidate',\n        images: 'cache-first',\n        html: 'network-first',\n        api: 'network-first'\n    },\n    expiration: {\n        maxEntries: 100,\n        maxAgeSeconds: 86400 // 24 hours\n    },\n    precache: true,\n    backgroundSync: false\n};\n\n/**\n * Generate Workbox service worker content\n */\nexport function generateWorkboxServiceWorker(\n    assetManifest: AssetManifest,\n    options: AppBootstrapOptions,\n    workboxOptions: WorkboxOptions = {}\n): string {\n    const opts = { ...DEFAULT_WORKBOX_OPTIONS, ...workboxOptions };\n\n    if (!opts.enabled) {\n        return generateMinimalServiceWorker(assetManifest, options);\n    }\n\n    const cacheName = `${opts.cacheNamePrefix}-v1`;\n    const { appName } = options;\n\n    return `/**\n * Service Worker - Generated by @basirah/app-bootstrap-lib\n * App: ${appName}\n * Created: ${new Date().toISOString()}\n */\n\nconst CACHE_NAME = '${cacheName}';\nconst STATIC_CACHE = '${cacheName}-static';\nconst DYNAMIC_CACHE = '${cacheName}-dynamic';\n\n// Assets to precache\nconst PRECACHE_ASSETS = [\n  '/',\n  '/index.html',\n  '/AppBootstrap.js',\n  '/asset-manifest.js',\n${assetManifest.loadingSequence.js.map(js => `  '/${js}',`).join('\\n')}\n${assetManifest.loadingSequence.css.map(css => `  '/${css}',`).join('\\n')}\n];\n\n// Install event - precache assets\nself.addEventListener('install', (event) => {\n  console.log('[SW] Installing service worker...');\n  event.waitUntil(\n    caches.open(STATIC_CACHE)\n      .then((cache) => {\n        console.log('[SW] Pre-caching app shell');\n        return cache.addAll(PRECACHE_ASSETS);\n      })\n      .then(() => {\n        console.log('[SW] Successfully installed');\n        return self.skipWaiting();\n      })\n  );\n});\n\n// Activate event - clean up old caches\nself.addEventListener('activate', (event) => {\n  console.log('[SW] Activating service worker...');\n  event.waitUntil(\n    caches.keys()\n      .then((cacheNames) => {\n        return Promise.all(\n          cacheNames.map((cacheName) => {\n            if (cacheName !== STATIC_CACHE && cacheName !== DYNAMIC_CACHE) {\n              console.log('[SW] Deleting old cache:', cacheName);\n              return caches.delete(cacheName);\n            }\n          })\n        );\n      })\n      .then(() => {\n        console.log('[SW] Successfully activated');\n        return self.clients.claim();\n      })\n  );\n});\n\n// Fetch event - handle requests\nself.addEventListener('fetch', (event) => {\n  const { request } = event;\n  const url = new URL(request.url);\n\n  // Skip non-GET requests\n  if (request.method !== 'GET') {\n    return;\n  }\n\n  // Handle different file types with different strategies\n  if (url.pathname.endsWith('.js')) {\n    event.respondWith(handleJSRequest(request));\n  } else if (url.pathname.endsWith('.css')) {\n    event.respondWith(handleCSSRequest(request));\n  } else if (url.pathname.match(/\\\\.(png|jpg|jpeg|svg|gif|ico)$/)) {\n    event.respondWith(handleImageRequest(request));\n  } else if (url.pathname.startsWith('/api/')) {\n    event.respondWith(handleAPIRequest(request));\n  } else {\n    event.respondWith(handleHTMLRequest(request));\n  }\n});\n\n// Cache First strategy for images\nasync function handleImageRequest(request) {\n  try {\n    const cachedResponse = await caches.match(request);\n    if (cachedResponse) {\n      return cachedResponse;\n    }\n\n    const networkResponse = await fetch(request);\n    if (networkResponse.ok) {\n      const cache = await caches.open(DYNAMIC_CACHE);\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  } catch (error) {\n    console.error('[SW] Image fetch failed:', error);\n    return new Response('Image not available', { status: 404 });\n  }\n}\n\n// Stale While Revalidate for JS/CSS\nasync function handleJSRequest(request) {\n  return handleStaleWhileRevalidate(request, STATIC_CACHE);\n}\n\nasync function handleCSSRequest(request) {\n  return handleStaleWhileRevalidate(request, STATIC_CACHE);\n}\n\n// Network First for HTML\nasync function handleHTMLRequest(request) {\n  try {\n    const networkResponse = await fetch(request);\n    if (networkResponse.ok) {\n      const cache = await caches.open(DYNAMIC_CACHE);\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  } catch (error) {\n    console.log('[SW] Network failed, trying cache...');\n    const cachedResponse = await caches.match(request);\n    if (cachedResponse) {\n      return cachedResponse;\n    }\n    return caches.match('/index.html');\n  }\n}\n\n// Network First for API calls\nasync function handleAPIRequest(request) {\n  try {\n    const networkResponse = await fetch(request);\n    if (networkResponse.ok) {\n      const cache = await caches.open(DYNAMIC_CACHE);\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  } catch (error) {\n    console.log('[SW] API network failed, trying cache...');\n    return await caches.match(request);\n  }\n}\n\n// Stale While Revalidate strategy\nasync function handleStaleWhileRevalidate(request, cacheName) {\n  const cache = await caches.open(cacheName);\n  const cachedResponse = await cache.match(request);\n\n  const fetchPromise = fetch(request).then((networkResponse) => {\n    if (networkResponse.ok) {\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  }).catch(() => {\n    console.log('[SW] Network failed for:', request.url);\n  });\n\n  return cachedResponse || fetchPromise;\n}\n\n// Background sync for offline actions\nself.addEventListener('sync', (event) => {\n  if (event.tag === 'background-sync') {\n    console.log('[SW] Background sync triggered');\n    event.waitUntil(doBackgroundSync());\n  }\n});\n\nasync function doBackgroundSync() {\n  // Handle offline actions here\n  console.log('[SW] Processing background sync...');\n}\n\n// Push notifications\nself.addEventListener('push', (event) => {\n  const options = {\n    body: event.data ? event.data.text() : 'New notification from ${appName}',\n    icon: '/icon-192x192.png',\n    badge: '/icon-192x192.png',\n    vibrate: [100, 50, 100],\n    data: {\n      dateOfArrival: Date.now(),\n      primaryKey: 1\n    }\n  };\n\n  event.waitUntil(\n    self.registration.showNotification('${appName}', options)\n  );\n});\n\n// Notification click\nself.addEventListener('notificationclick', (event) => {\n  event.notification.close();\n  event.waitUntil(\n    clients.openWindow('/')\n  );\n});\n\nconsole.log('[SW] Service worker loaded successfully');\n`;\n}\n\n/**\n * Generate minimal service worker (fallback)\n */\nfunction generateMinimalServiceWorker(\n    _assetManifest: AssetManifest,\n    options: AppBootstrapOptions\n): string {\n    return `/**\n * Minimal Service Worker - Generated by @basirah/app-bootstrap-lib\n * App: ${options.appName}\n * Created: ${new Date().toISOString()}\n */\n\nself.addEventListener('install', (event) => {\n  console.log('[SW] Installing minimal service worker...');\n  self.skipWaiting();\n});\n\nself.addEventListener('activate', (event) => {\n  console.log('[SW] Activating minimal service worker...');\n  self.clients.claim();\n});\n\nself.addEventListener('fetch', (event) => {\n  // Basic caching for offline support\n  event.respondWith(\n    caches.match(event.request)\n      .then((response) => {\n        return response || fetch(event.request);\n      })\n  );\n});\n\nconsole.log('[SW] Minimal service worker loaded');\n`;\n}\n\n/**\n * Generate service worker registration script\n */\nexport function generateServiceWorkerRegistration(\n    options: AppBootstrapOptions,\n    workboxOptions: WorkboxOptions = {}\n): string {\n    const opts = { ...DEFAULT_WORKBOX_OPTIONS, ...workboxOptions };\n\n    if (!opts.enabled) {\n        return '';\n    }\n\n    return `/**\n * Service Worker Registration - Generated by @basirah/app-bootstrap-lib\n * App: ${options.appName}\n */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/sw.js')\n      .then((registration) => {\n        console.log('[SW] Registration successful:', registration.scope);\n\n        // Handle updates\n        registration.addEventListener('updatefound', () => {\n          const newWorker = registration.installing;\n          newWorker.addEventListener('statechange', () => {\n            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n              // New content is available\n              console.log('[SW] New content available');\n              // You can show a notification to the user here\n            }\n          });\n        });\n      })\n      .catch((error) => {\n        console.error('[SW] Registration failed:', error);\n      });\n  });\n}\n\n// Background sync registration\nif ('serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype) {\n  navigator.serviceWorker.ready.then((registration) => {\n    // Register background sync\n    registration.sync.register('background-sync');\n  });\n}\n`;\n}\n\n/**\n * Generate PWA manifest with Workbox integration\n */\nexport function generatePWAManifest(\n    options: AppBootstrapOptions,\n    _workboxOptions: WorkboxOptions = {},\n    pwaConfig?: any\n): string {\n    // Use PWA config if provided, otherwise use defaults\n    const manifestConfig = pwaConfig?.manifest || {};\n\n    const manifest = {\n        name: manifestConfig.name || options.appName || 'App',\n        short_name: manifestConfig.short_name || (options.appName || 'App').replace(/\\s+/g, '').substring(0, 12),\n        description: manifestConfig.description || `PWA for ${options.appName || 'App'} with offline support`,\n        theme_color: manifestConfig.theme_color || (options.loadingTheme === 'gradient' ? '#667eea' : '#2c3e50'),\n        background_color: manifestConfig.background_color || '#ffffff',\n        display: manifestConfig.display || 'standalone',\n        orientation: manifestConfig.orientation || 'portrait',\n        scope: manifestConfig.scope || '/',\n        start_url: manifestConfig.start_url || '/',\n        icons: manifestConfig.icons || [\n            {\n                src: '/icon-192x192.png',\n                sizes: '192x192',\n                type: 'image/png'\n            },\n            {\n                src: '/icon-512x512.png',\n                sizes: '512x512',\n                type: 'image/png'\n            },\n            {\n                src: '/icon-512x512.png',\n                sizes: '512x512',\n                type: 'image/png',\n                purpose: 'maskable'\n            }\n        ],\n        categories: ['utilities', 'productivity'],\n        shortcuts: [\n            {\n                name: 'Home',\n                short_name: 'Home',\n                description: 'Go to home page',\n                url: '/',\n                icons: [{ src: '/icon-192x192.png', sizes: '192x192' }]\n            }\n        ]\n    };\n\n    return JSON.stringify(manifest, null, 2);\n}\n","/**\n * PWA Bootstrap Kit - Vite Plugin\n * Created: 2024-12-19\n * Updated: 2024-12-19\n * Purpose: Vite plugin integration for PWA bootstrap functionality.\n *          Provides automatic asset manifest generation, loading optimization, and PWA configuration.\n *          Separated Node.js-specific code to prevent bundling in client builds.\n */\n\nimport type { Plugin } from 'vite';\nimport type { AppBootstrapOptions, AssetManifest } from './types';\nimport type { PWAConfig } from './pwa';\nimport { generateAppBootstrap } from './vite-plugin-utils';\nimport { generateWorkboxServiceWorker, generateServiceWorkerRegistration, generatePWAManifest, type WorkboxOptions } from './workbox';\n\n// Default chunk priorities\nconst DEFAULT_PRIORITIES = {\n    'vendor': 1,\n    'main': 2,\n    'app': 3,\n    'chunk': 4\n};\n\n/**\n * Extended plugin options including PWA configuration\n */\nexport interface PWAAppBootstrapOptions extends AppBootstrapOptions {\n    /** PWA-specific configuration */\n    pwa?: PWAConfig;\n    /** Workbox configuration */\n    workbox?: WorkboxOptions;\n}\n\n/**\n * Generate chunk configuration\n */\nfunction generateChunkConfiguration(customChunks: Record<string, string[]> = {}): Record<string, string[]> {\n    const chunks: Record<string, string[]> = {\n        vendor: ['react', 'react-dom'],\n        ...customChunks\n    };\n\n    return chunks;\n}\n\n/**\n * Analyze build output and create asset manifest\n */\nfunction analyzeBuildOutput(bundle: any, priorities: Record<string, number>, assetPrefix: string = ''): AssetManifest {\n    const js: Record<string, string> = {};\n    const css: Record<string, string> = {};\n    let totalOriginalSize = 0;\n\n    // Process bundle files\n    for (const [fileName, file] of Object.entries(bundle)) {\n        const fileInfo = file as any;\n        const filePath = assetPrefix ? `${assetPrefix}/${fileName}` : `/${fileName}`;\n\n        if (fileName.endsWith('.js')) {\n            js[fileName] = filePath;\n            totalOriginalSize += fileInfo.code?.length || 0;\n        } else if (fileName.endsWith('.css')) {\n            css[fileName] = filePath;\n            totalOriginalSize += fileInfo.source?.length || 0;\n        }\n    }\n\n    // Create loading sequence based on priorities\n    const loadingSequence = {\n        js: Object.keys(js).sort((a, b) => {\n            const priorityA = priorities[a] || 999;\n            const priorityB = priorities[b] || 999;\n            return priorityA - priorityB;\n        }),\n        css: Object.keys(css)\n    };\n\n    return {\n        js,\n        css,\n        loadingSequence,\n        totalOriginalSize,\n        buildInfo: {\n            timestamp: Date.now(),\n            version: '1.2.0',\n            appName: 'PWA App',\n            compressionEnabled: false,\n            chunksGenerated: Object.keys(js).length,\n            plugin: 'pwa-bootstrap-kit'\n        }\n    };\n}\n\n/**\n * Transform index.html to include bootstrap script and service worker registration\n */\nfunction transformIndexHtml(html: string, options: Required<AppBootstrapOptions>, pwaConfig?: PWAConfig, workboxOptions?: any): string {\n    const bootstrapScript = `<script src=\"/${options.bootstrapFileName}\"></script>`;\n\n    // Only include service worker registration if PWA is enabled\n    const swRegistrationScript = (pwaConfig?.enablePWA !== false && workboxOptions?.enabled !== false)\n        ? `<script src=\"/registerSW.js\"></script>`\n        : '';\n\n    let result = html;\n\n    // Remove development-specific scripts and main.tsx script\n    result = result.replace(/<script type=\"module\" src=\"\\/src\\/main\\.tsx\"><\\/script>/g, '');\n    result = result.replace(/<!-- Main Application Entry Point.*?-->/g, '');\n\n    // Remove development-specific script blocks\n    result = result.replace(/<!-- Development-specific scripts -->[\\s\\S]*?<\\/script>/g, '');\n\n    // Remove asset manifest script from body (it should be in head)\n    result = result.replace(/<!-- Asset Manifest.*?-->\\s*<script src=\"\\/asset-manifest\\.js\"><\\/script>/g, '');\n\n    // Insert before closing head tag\n    if (result.includes('</head>')) {\n        const scriptsToAdd = [bootstrapScript];\n        if (swRegistrationScript) {\n            scriptsToAdd.push(swRegistrationScript);\n        }\n        result = result.replace('</head>', `  ${scriptsToAdd.join('\\n  ')}\\n</head>`);\n    } else {\n        // Insert at the beginning if no head tag\n        const scriptsToAdd = [bootstrapScript];\n        if (swRegistrationScript) {\n            scriptsToAdd.push(swRegistrationScript);\n        }\n        result = scriptsToAdd.join('\\n') + '\\n' + result;\n    }\n\n    return result;\n}\n\n/**\n * Main Vite plugin function\n */\nexport default function appBootstrapPlugin(options: PWAAppBootstrapOptions = {}): Plugin {\n    let buildAssets: AssetManifest;\n\n    // Set defaults\n    const opts: Required<AppBootstrapOptions> = {\n        enableGzip: false,\n        enableProgress: true,\n        enableFallback: true,\n        debugMode: false,\n        appName: 'Application',\n        appIcon: '⚡',\n        loadingTheme: 'gradient',\n        customTheme: '',\n        enableCDNFallback: false,\n        compressionFirst: false,\n        customChunks: {},\n        chunkPriorities: {},\n        assetPrefix: '',\n        bootstrapFileName: 'AppBootstrap.js',\n        gzipLoaderConfig: {\n            debugMode: false,\n            useGzip: false,\n            fallbackToUncompressed: true,\n            timeout: 10000,\n            retries: 3\n        },\n        ...options\n    };\n\n    // Merge priorities\n    const priorities = { ...DEFAULT_PRIORITIES, ...opts.chunkPriorities };\n\n    return {\n        name: 'app-bootstrap-lib',\n\n\n\n        config(config) {\n            // Configure build options\n            if (!config.build) config.build = {};\n            config.build.cssCodeSplit = true;\n\n            // Configure rollup options\n            if (!config.build.rollupOptions) config.build.rollupOptions = {};\n            if (!config.build.rollupOptions.output) config.build.rollupOptions.output = {};\n\n            // Set predictable asset names\n            const output = config.build.rollupOptions.output as any;\n            output.entryFileNames = '[name].js';\n            output.chunkFileNames = '[name].js';\n            output.assetFileNames = (assetInfo: any) => {\n                if (!assetInfo.name) return '[name].[ext]';\n                const info = assetInfo.name.split('.');\n                const ext = info[info.length - 1];\n                if (/\\.(css)$/.test(assetInfo.name)) {\n                    return `assets/[name].${ext}`;\n                }\n                return '[name].[ext]';\n            };\n\n            // Generate chunks\n            const chunks = generateChunkConfiguration(opts.customChunks);\n            output.manualChunks = chunks;\n\n            if (opts.debugMode) {\n                console.log('[app-bootstrap-lib] App name:', opts.appName);\n                console.log('[app-bootstrap-lib] Theme:', opts.loadingTheme);\n            }\n\n            return config;\n        },\n\n        transformIndexHtml(html) {\n            console.log('[app-bootstrap-lib] 🔍 Transforming index.html...');\n            console.log('[app-bootstrap-lib] 📄 HTML length:', html.length);\n            console.log('[app-bootstrap-lib] 🔧 Workbox enabled:', options.workbox?.enabled);\n\n            const result = transformIndexHtml(html, opts, options.pwa, options.workbox);\n\n            console.log('[app-bootstrap-lib] ✅ HTML transformation complete');\n            console.log('[app-bootstrap-lib] 📄 Result length:', result.length);\n            console.log('[app-bootstrap-lib] 🔍 Contains AppBootstrap.js:', result.includes('AppBootstrap.js'));\n            console.log('[app-bootstrap-lib] 🔍 Contains registerSW.js:', result.includes('registerSW.js'));\n\n            return result;\n        },\n\n        generateBundle(_options: any, bundle: any) {\n            // Analyze build output\n            buildAssets = analyzeBuildOutput(bundle, priorities, opts.assetPrefix);\n\n            // Generate asset manifest\n            const assetManifest = {\n                ...buildAssets,\n                buildInfo: {\n                    ...buildAssets.buildInfo,\n                    appName: opts.appName,\n                    compressionEnabled: opts.enableGzip,\n                    plugin: 'pwa-bootstrap-kit'\n                }\n            };\n\n            // Add asset manifest to bundle\n            this.emitFile({\n                type: 'asset',\n                fileName: 'asset-manifest.js',\n                source: `window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};`\n            });\n\n            // Generate AppBootstrap.js\n            const appBootstrapContent = generateAppBootstrap(assetManifest, opts);\n\n            this.emitFile({\n                type: 'asset',\n                fileName: opts.bootstrapFileName,\n                source: appBootstrapContent\n            });\n\n            // Generate PWA assets if enabled\n            const pwaEnabled = options.pwa?.enablePWA !== false;\n            const workboxEnabled = options.workbox?.enabled !== false;\n\n            if (pwaEnabled && workboxEnabled) {\n                const workboxOptions = options.workbox || {};\n                const pwaConfig = options.pwa || {};\n\n                // Generate Workbox service worker\n                const serviceWorkerContent = generateWorkboxServiceWorker(assetManifest, opts, workboxOptions);\n\n                this.emitFile({\n                    type: 'asset',\n                    fileName: 'sw.js',\n                    source: serviceWorkerContent\n                });\n\n                // Generate PWA manifest with custom configuration\n                const manifestContent = generatePWAManifest(opts, workboxOptions, pwaConfig);\n\n                this.emitFile({\n                    type: 'asset',\n                    fileName: 'manifest.webmanifest',\n                    source: manifestContent\n                });\n\n                // Generate service worker registration script\n                const registrationScript = generateServiceWorkerRegistration(opts, workboxOptions);\n                if (registrationScript) {\n                    this.emitFile({\n                        type: 'asset',\n                        fileName: 'registerSW.js',\n                        source: registrationScript\n                    });\n                }\n\n                if (opts.debugMode) {\n                    console.log(`[pwa-bootstrap-kit] 🔧 Generated Workbox service worker`);\n                    console.log(`[pwa-bootstrap-kit] 📱 Generated PWA manifest`);\n                    console.log(`[pwa-bootstrap-kit] 🚀 PWA functionality enabled`);\n                }\n            } else if (opts.debugMode) {\n                console.log(`[pwa-bootstrap-kit] ⚠️ PWA functionality disabled`);\n                if (!pwaEnabled) console.log(`[pwa-bootstrap-kit]   - PWA config disabled`);\n                if (!workboxEnabled) console.log(`[pwa-bootstrap-kit]   - Workbox disabled`);\n            }\n\n            if (opts.debugMode) {\n                console.log(`[pwa-bootstrap-kit] ✅ Generated ${opts.bootstrapFileName}`);\n                console.log(`[pwa-bootstrap-kit] 📦 Assets: ${Object.keys(buildAssets.js).length} JS, ${Object.keys(buildAssets.css).length} CSS`);\n            }\n        }\n    };\n}\n\n// Named exports\nexport { appBootstrapPlugin };\n","/**\n * Simplified React Hooks for App Bootstrap\n * Created: 2024-12-19\n * Purpose: React integration for app bootstrap functionality\n */\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport type { UseAppBootstrapReturn, LoadingState, AssetManifest, AppBootstrapConfig } from './types';\n\n// Simple event emitter for app bootstrap events\nclass AppBootstrapEvents {\n    private listeners: Record<string, Function[]> = {};\n\n    on(event: string, callback: Function): () => void {\n        if (!this.listeners[event]) {\n            this.listeners[event] = [];\n        }\n        this.listeners[event].push(callback);\n\n        return () => {\n            this.listeners[event] = this.listeners[event].filter(cb => cb !== callback);\n        };\n    }\n\n    emit(event: string, data?: any): void {\n        if (this.listeners[event]) {\n            this.listeners[event].forEach(callback => callback(data));\n        }\n    }\n}\n\n// Global event emitter instance\nexport const appBootstrapEvents = new AppBootstrapEvents();\n\n// Utility functions\nfunction getAssetManifest(): AssetManifest | null {\n    return (window as any).ASSET_MANIFEST || null;\n}\n\nfunction isAppBootstrapReady(): boolean {\n    return (window as any).APP_BOOTSTRAP_READY === true;\n}\n\nfunction getCurrentLoadingState(): LoadingState | null {\n    return (window as any).APP_BOOTSTRAP_LOADING_STATE || null;\n}\n\n/**\n * Main hook for app bootstrap integration\n */\nexport function useAppBootstrap(config: AppBootstrapConfig = {}): UseAppBootstrapReturn {\n    const [loadingState, setLoadingState] = useState<LoadingState>({\n        isLoaded: false,\n        isLoading: false,\n        progress: 0,\n        currentChunk: '',\n        loadedChunks: [],\n        totalChunks: 0,\n        error: null,\n        startTime: Date.now()\n    });\n\n    const [assetManifest, setAssetManifest] = useState<AssetManifest | null>(null);\n    const [error, setError] = useState<string | null>(null);\n    const isReady = useRef(false);\n\n    // Initialize loading state\n    useEffect(() => {\n        const currentState = getCurrentLoadingState();\n        const currentManifest = getAssetManifest();\n\n        if (currentState) {\n            setLoadingState(currentState);\n        }\n\n        if (currentManifest) {\n            setAssetManifest(currentManifest);\n        }\n\n        // Check if already ready\n        if (isAppBootstrapReady()) {\n            isReady.current = true;\n            setLoadingState(prev => ({\n                ...prev,\n                isLoaded: true,\n                isLoading: false,\n                progress: 100\n            }));\n        }\n    }, []);\n\n    // Set up event listeners\n    useEffect(() => {\n        const unsubscribeStart = appBootstrapEvents.on('loading:start', (_event: any) => {\n            setLoadingState(prev => ({\n                ...prev,\n                isLoading: true,\n                isLoaded: false,\n                startTime: Date.now(),\n                error: null\n            }));\n            setError(null);\n        });\n\n        const unsubscribeProgress = appBootstrapEvents.on('loading:progress', (event: any) => {\n            setLoadingState(prev => ({\n                ...prev,\n                progress: event.data?.progress || prev.progress\n            }));\n        });\n\n        const unsubscribeComplete = appBootstrapEvents.on('loading:complete', (_event: any) => {\n            isReady.current = true;\n            setLoadingState(prev => ({\n                ...prev,\n                isLoaded: true,\n                isLoading: false,\n                progress: 100,\n                endTime: Date.now(),\n                duration: Date.now() - prev.startTime\n            }));\n        });\n\n        const unsubscribeError = appBootstrapEvents.on('loading:error', (event: any) => {\n            const errorMessage = event.data?.error || 'Unknown loading error';\n            setError(errorMessage);\n            setLoadingState(prev => ({\n                ...prev,\n                isLoading: false,\n                error: errorMessage\n            }));\n        });\n\n        const unsubscribeManifestLoaded = appBootstrapEvents.on('manifest:loaded', (event: any) => {\n            setAssetManifest(event.data?.manifest);\n        });\n\n        // Cleanup function\n        return () => {\n            unsubscribeStart();\n            unsubscribeProgress();\n            unsubscribeComplete();\n            unsubscribeError();\n            unsubscribeManifestLoaded();\n        };\n    }, []);\n\n    // Poll for asset manifest if not available\n    useEffect(() => {\n        if (assetManifest || !config.enableDebug) return;\n\n        const pollInterval = setInterval(() => {\n            const manifest = getAssetManifest();\n            if (manifest) {\n                setAssetManifest(manifest);\n                clearInterval(pollInterval);\n            }\n        }, 100);\n\n        return () => clearInterval(pollInterval);\n    }, [assetManifest, config.enableDebug]);\n\n    // Development mode detection and ready state\n    useEffect(() => {\n        if (isReady.current) return;\n\n        // In development mode, detect when React app is mounted and ready\n        const checkDevReady = () => {\n            // Check if React app is mounted and DOM is ready\n            const rootElement = document.getElementById('root');\n            if (rootElement && rootElement.children.length > 0) {\n                // Check if the app content is actually rendered\n                const appContent = rootElement.querySelector('.app, .home-page, .system-config-page, .video-player-page');\n                if (appContent) {\n                    console.log('[useAppBootstrap] Development mode: App content detected, marking as ready');\n                    isReady.current = true;\n                    setLoadingState(prev => ({\n                        ...prev,\n                        isLoaded: true,\n                        isLoading: false,\n                        progress: 100,\n                        endTime: Date.now(),\n                        duration: Date.now() - prev.startTime\n                    }));\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Try immediately\n        if (checkDevReady()) return;\n\n        // Poll for app content in development mode\n        const pollInterval = setInterval(() => {\n            if (checkDevReady()) {\n                clearInterval(pollInterval);\n            }\n        }, 100);\n\n        // Fallback timeout\n        const timeout = setTimeout(() => {\n            clearInterval(pollInterval);\n            if (!isReady.current) {\n                console.log('[useAppBootstrap] Development mode: Fallback timeout, marking as ready');\n                isReady.current = true;\n                setLoadingState(prev => ({\n                    ...prev,\n                    isLoaded: true,\n                    isLoading: false,\n                    progress: 100,\n                    endTime: Date.now(),\n                    duration: Date.now() - prev.startTime\n                }));\n            }\n        }, 3000); // 3 second timeout\n\n        return () => {\n            clearInterval(pollInterval);\n            clearTimeout(timeout);\n        };\n    }, []);\n\n    // Retry function\n    const retry = useCallback(() => {\n        setError(null);\n        setLoadingState(prev => ({\n            ...prev,\n            error: null,\n            isLoading: true,\n            isLoaded: false,\n            startTime: Date.now()\n        }));\n\n        appBootstrapEvents.emit('loading:retry', { timestamp: Date.now() });\n    }, []);\n\n    // Get chunk progress\n    const getChunkProgress = useCallback((chunkName: string): number => {\n        if (!assetManifest) return 0;\n        const chunk = assetManifest.js[chunkName];\n        return chunk ? 100 : 0;\n    }, [assetManifest]);\n\n    // Get overall progress\n    const getOverallProgress = useCallback((): number => {\n        return loadingState.progress;\n    }, [loadingState.progress]);\n\n    // Debug logging\n    useEffect(() => {\n        if (config.enableDebug) {\n            console.log('[useAppBootstrap] Loading state:', loadingState);\n            console.log('[useAppBootstrap] Asset manifest:', assetManifest);\n            console.log('[useAppBootstrap] Error:', error);\n        }\n    }, [loadingState, assetManifest, error, config.enableDebug]);\n\n    return {\n        loadingState,\n        assetManifest,\n        isReady: isReady.current,\n        error,\n        retry,\n        getChunkProgress,\n        getOverallProgress\n    };\n}\n\n/**\n * Simplified hook for basic app bootstrap status\n */\nexport function useAppBootstrapStatus() {\n    const { loadingState, isReady, error } = useAppBootstrap();\n\n    return {\n        isReady,\n        isLoading: loadingState.isLoading,\n        isLoaded: loadingState.isLoaded,\n        progress: loadingState.progress,\n        error,\n        currentChunk: loadingState.currentChunk\n    };\n}\n\n/**\n * Hook for app bootstrap with custom configuration\n */\nexport function useAppBootstrapWithConfig(config: AppBootstrapConfig) {\n    return useAppBootstrap(config);\n}\n\n// Export event emitter for external use\n// Note: appBootstrapEvents is already exported above\n","/**\n * Simplified Cache Manager\n * Created: 2024-12-19\n * Purpose: Unified cache management for app bootstrap\n */\n\nimport type { CacheManagerConfig, CacheManager } from './types';\n\nexport class AppCacheManager implements CacheManager {\n    private loadingElement: HTMLElement | null;\n    private config: CacheManagerConfig;\n\n    constructor(config: CacheManagerConfig = {}) {\n        this.config = {\n            cacheName: 'app-bootstrap-v1',\n            appVersion: '1.0.0',\n            enableServiceWorker: true,\n            loadingScreen: {\n                theme: 'gradient'\n            },\n            ...config\n        };\n\n        this.loadingElement = null;\n    }\n\n    async init(): Promise<void> {\n        console.log('App Cache Manager initializing...');\n\n        // Check if loading screen already exists to prevent duplicates\n        const existingLoadingScreen = document.getElementById('loading-screen');\n        if (!existingLoadingScreen) {\n            this.setupLoadingScreen();\n        } else {\n            this.loadingElement = existingLoadingScreen;\n        }\n\n        await this.loadApp();\n    }\n\n    private setupLoadingScreen(): void {\n        const theme = this.config.loadingScreen?.theme || 'gradient';\n        const customHTML = this.config.loadingScreen?.customHTML;\n\n        const loadingHTML = customHTML || this.getDefaultLoadingHTML(theme);\n        document.body.insertAdjacentHTML('afterbegin', loadingHTML);\n        this.loadingElement = document.getElementById('loading-screen');\n    }\n\n    private getDefaultLoadingHTML(theme: string): string {\n        const baseStyles = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      color: white;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      z-index: 9999;\n    `;\n\n        const background = theme === 'gradient'\n            ? 'background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);'\n            : 'background: #2c3e50;';\n\n        return `\n      <div id=\"loading-screen\" style=\"${baseStyles} ${background}\">\n        <div style=\"\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.3);\n          border-top: 4px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 20px;\n        \"></div>\n        <p id=\"loading-text\">Loading Application...</p>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    `;\n    }\n\n    updateLoadingText(text: string): void {\n        const loadingText = document.getElementById('loading-text');\n        if (loadingText) {\n            loadingText.textContent = text;\n        }\n    }\n\n    private async loadApp(): Promise<void> {\n        this.updateLoadingText('Loading application...');\n\n        // Wait for React app to be ready, then hide loading screen\n        const checkAppReady = () => {\n            const rootElement = document.getElementById('root');\n            if (rootElement && rootElement.children.length > 0) {\n                // Check if React app has rendered content\n                const appContent = rootElement.querySelector('.app, .home-page, .system-config-page, .video-player-page');\n                if (appContent) {\n                    console.log('[CacheManager] App content detected, hiding loading screen');\n                    this.hideLoadingScreen();\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Try immediately\n        if (checkAppReady()) return;\n\n        // Poll for app content\n        const pollInterval = setInterval(() => {\n            if (checkAppReady()) {\n                clearInterval(pollInterval);\n            }\n        }, 100);\n\n        // Fallback timeout\n        setTimeout(() => {\n            clearInterval(pollInterval);\n            console.log('[CacheManager] Fallback timeout, hiding loading screen');\n            this.hideLoadingScreen();\n        }, 3000);\n    }\n\n    hideLoadingScreen(): void {\n        if (this.loadingElement) {\n            this.loadingElement.style.opacity = '0';\n            this.loadingElement.style.transition = 'opacity 0.3s ease-out';\n            setTimeout(() => {\n                if (this.loadingElement && this.loadingElement.parentNode) {\n                    this.loadingElement.parentNode.removeChild(this.loadingElement);\n                }\n            }, 300);\n        }\n    }\n\n    showError(message: string): void {\n        if (this.loadingElement) {\n            this.loadingElement.innerHTML = `\n        <div style=\"text-align: center;\">\n          <h3>Error</h3>\n          <p>${message}</p>\n          <button onclick=\"location.reload()\" style=\"\n            background: white;\n            color: #667eea;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            margin-top: 10px;\n          \">Retry</button>\n        </div>\n      `;\n        }\n    }\n\n    retry(): void {\n        location.reload();\n    }\n\n    // Service Worker registration - removed to simplify\n}\n\n// Auto-initialize when DOM is ready\nexport function initializeCacheManager(config?: CacheManagerConfig): AppCacheManager {\n    const manager = new AppCacheManager(config);\n\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => {\n            manager.init();\n        });\n    } else {\n        manager.init();\n    }\n\n    return manager;\n}\n\n// Default export\nexport default AppCacheManager;\n","/**\n * PWA Bootstrap Kit - PWA Module\n * Created: 2024-12-19\n * Purpose: PWA-specific functionality including service worker registration, manifest generation, and install prompts\n *\n * This module can be disabled from project vite config by setting enablePWA: false\n */\n\n// PWA-specific types and functionality\n\n/**\n * PWA Configuration Options\n */\nexport interface PWAConfig {\n    /** Enable PWA functionality (can be disabled from project config) */\n    enablePWA?: boolean;\n    /** PWA manifest configuration */\n    manifest?: {\n        name: string;\n        short_name?: string;\n        description?: string;\n        theme_color?: string;\n        background_color?: string;\n        display?: 'standalone' | 'fullscreen' | 'minimal-ui' | 'browser';\n        orientation?: 'portrait' | 'landscape' | 'any';\n        scope?: string;\n        start_url?: string;\n        icons?: Array<{\n            src: string;\n            sizes: string;\n            type?: string;\n            purpose?: string;\n        }>;\n    };\n    /** Service worker configuration */\n    serviceWorker?: {\n        /** Enable service worker registration */\n        enabled?: boolean;\n        /** Service worker file path */\n        src?: string;\n        /** Service worker scope */\n        scope?: string;\n        /** Update strategy */\n        updateStrategy?: 'all' | 'hierarchical' | 'minimal';\n        /** Skip waiting for service worker updates */\n        skipWaiting?: boolean;\n        /** Clients claim strategy */\n        clientsClaim?: boolean;\n    };\n    /** Install prompt configuration */\n    installPrompt?: {\n        /** Enable install prompt */\n        enabled?: boolean;\n        /** Custom install prompt text */\n        text?: string;\n        /** Install prompt button text */\n        buttonText?: string;\n        /** Install prompt position */\n        position?: 'top' | 'bottom' | 'center';\n    };\n}\n\n/**\n * PWA Manager Class\n * Handles PWA-specific functionality including service worker registration and install prompts\n */\nexport class PWAManager {\n    private config: PWAConfig;\n    private deferredPrompt: any = null;\n    private installPromptElement: HTMLElement | null = null;\n\n    constructor(config: PWAConfig = {}) {\n        this.config = {\n            enablePWA: true,\n            manifest: {\n                name: 'Progressive Web App',\n                display: 'standalone',\n                theme_color: '#000000',\n                background_color: '#ffffff'\n            },\n            serviceWorker: {\n                enabled: true,\n                src: '/sw.js',\n                scope: '/',\n                updateStrategy: 'all',\n                skipWaiting: true,\n                clientsClaim: true\n            },\n            installPrompt: {\n                enabled: true,\n                text: 'Install this app for a better experience',\n                buttonText: 'Install',\n                position: 'bottom'\n            },\n            ...config\n        };\n    }\n\n    /**\n     * Initialize PWA functionality\n     */\n    async init(): Promise<void> {\n        if (!this.config.enablePWA) {\n            console.log('PWA functionality is disabled');\n            return;\n        }\n\n        try {\n            // Register service worker if enabled\n            if (this.config.serviceWorker?.enabled) {\n                await this.registerServiceWorker();\n            }\n\n            // Set up install prompt if enabled\n            if (this.config.installPrompt?.enabled) {\n                this.setupInstallPrompt();\n            }\n\n            console.log('PWA functionality initialized successfully');\n        } catch (error) {\n            console.error('Failed to initialize PWA functionality:', error);\n        }\n    }\n\n    /**\n     * Register service worker\n     */\n    private async registerServiceWorker(): Promise<void> {\n        if (!('serviceWorker' in navigator)) {\n            console.warn('Service Worker not supported');\n            return;\n        }\n\n        try {\n            const registration = await navigator.serviceWorker.register(\n                this.config.serviceWorker!.src!,\n                { scope: this.config.serviceWorker!.scope! }\n            );\n\n            console.log('Service Worker registered:', registration);\n\n            // Handle service worker updates\n            registration.addEventListener('updatefound', () => {\n                const newWorker = registration.installing;\n                if (newWorker) {\n                    newWorker.addEventListener('statechange', () => {\n                        if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n                            // New service worker available\n                            this.showUpdatePrompt();\n                        }\n                    });\n                }\n            });\n        } catch (error) {\n            console.error('Service Worker registration failed:', error);\n        }\n    }\n\n    /**\n     * Set up install prompt\n     */\n    private setupInstallPrompt(): void {\n        window.addEventListener('beforeinstallprompt', (e) => {\n            e.preventDefault();\n            this.deferredPrompt = e;\n            this.showInstallPrompt();\n        });\n\n        window.addEventListener('appinstalled', () => {\n            console.log('App was installed');\n            this.hideInstallPrompt();\n        });\n    }\n\n    /**\n     * Show install prompt\n     */\n    private showInstallPrompt(): void {\n        if (!this.deferredPrompt || !this.config.installPrompt?.enabled) {\n            return;\n        }\n\n        // Create install prompt element\n        this.installPromptElement = document.createElement('div');\n        this.installPromptElement.className = 'pwa-install-prompt';\n        this.installPromptElement.innerHTML = `\n      <div class=\"pwa-install-content\">\n        <p>${this.config.installPrompt.text}</p>\n        <button class=\"pwa-install-button\">${this.config.installPrompt.buttonText}</button>\n        <button class=\"pwa-install-dismiss\">Dismiss</button>\n      </div>\n    `;\n\n        // Add styles\n        this.installPromptElement.style.cssText = `\n      position: fixed;\n      ${this.config.installPrompt.position}: 20px;\n      left: 20px;\n      right: 20px;\n      background: white;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      padding: 16px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    `;\n\n        // Add event listeners\n        const installButton = this.installPromptElement.querySelector('.pwa-install-button');\n        const dismissButton = this.installPromptElement.querySelector('.pwa-install-dismiss');\n\n        installButton?.addEventListener('click', () => this.installApp());\n        dismissButton?.addEventListener('click', () => this.hideInstallPrompt());\n\n        document.body.appendChild(this.installPromptElement);\n    }\n\n    /**\n     * Hide install prompt\n     */\n    private hideInstallPrompt(): void {\n        if (this.installPromptElement) {\n            this.installPromptElement.remove();\n            this.installPromptElement = null;\n        }\n    }\n\n    /**\n     * Install app\n     */\n    private async installApp(): Promise<void> {\n        if (!this.deferredPrompt) {\n            return;\n        }\n\n        this.deferredPrompt.prompt();\n        const { outcome } = await this.deferredPrompt.userChoice;\n\n        if (outcome === 'accepted') {\n            console.log('User accepted the install prompt');\n        } else {\n            console.log('User dismissed the install prompt');\n        }\n\n        this.deferredPrompt = null;\n        this.hideInstallPrompt();\n    }\n\n    /**\n     * Show update prompt\n     */\n    private showUpdatePrompt(): void {\n        const updatePrompt = document.createElement('div');\n        updatePrompt.className = 'pwa-update-prompt';\n        updatePrompt.innerHTML = `\n      <div class=\"pwa-update-content\">\n        <p>A new version is available!</p>\n        <button class=\"pwa-update-button\">Update Now</button>\n        <button class=\"pwa-update-dismiss\">Later</button>\n      </div>\n    `;\n\n        updatePrompt.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 20px;\n      right: 20px;\n      background: #4CAF50;\n      color: white;\n      border-radius: 8px;\n      padding: 16px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    `;\n\n        const updateButton = updatePrompt.querySelector('.pwa-update-button');\n        const dismissButton = updatePrompt.querySelector('.pwa-update-dismiss');\n\n        updateButton?.addEventListener('click', () => {\n            window.location.reload();\n        });\n\n        dismissButton?.addEventListener('click', () => {\n            updatePrompt.remove();\n        });\n\n        document.body.appendChild(updatePrompt);\n    }\n\n    /**\n     * Check if app is installed\n     */\n    isInstalled(): boolean {\n        return window.matchMedia('(display-mode: standalone)').matches ||\n            (window.navigator as any).standalone === true;\n    }\n\n    /**\n     * Get PWA status\n     */\n    getStatus(): {\n        isInstalled: boolean;\n        isOnline: boolean;\n        hasServiceWorker: boolean;\n    } {\n        return {\n            isInstalled: this.isInstalled(),\n            isOnline: navigator.onLine,\n            hasServiceWorker: 'serviceWorker' in navigator\n        };\n    }\n}\n\n/**\n * Initialize PWA functionality\n * @param config PWA configuration options\n */\nexport function initializePWA(config?: PWAConfig): PWAManager {\n    const pwaManager = new PWAManager(config);\n    pwaManager.init();\n    return pwaManager;\n}\n\n/**\n * Create PWA manifest\n * @param config PWA configuration\n */\nexport function createPWAManifest(config: PWAConfig): any {\n    if (!config.manifest) {\n        return null;\n    }\n\n    return {\n        name: config.manifest.name,\n        short_name: config.manifest.short_name || config.manifest.name,\n        description: config.manifest.description,\n        theme_color: config.manifest.theme_color,\n        background_color: config.manifest.background_color,\n        display: config.manifest.display,\n        orientation: config.manifest.orientation,\n        scope: config.manifest.scope || '/',\n        start_url: config.manifest.start_url || '/',\n        icons: config.manifest.icons || []\n    };\n}\n\n// Default export\nexport default {\n    PWAManager,\n    initializePWA,\n    createPWAManifest\n};\n"]}