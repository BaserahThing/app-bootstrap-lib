{"version":3,"sources":["../src/vite-plugin-utils.ts","../src/vite-plugin-server.ts","../src/vite.ts","../src/workbox.ts","../src/react.ts","../src/cache.ts"],"names":["generateDevModeFiles"],"mappings":"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","file":"index.mjs","sourcesContent":["/**\n * Vite Plugin Utilities\n * Created: 2024-07-31\n * Purpose: Shared utility functions for the Vite plugin\n */\n\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nexport function generateAppBootstrap(assetManifest: AssetManifest, options: Required<AppBootstrapOptions>): string {\n    const { appName, loadingTheme, customTheme } = options;\n\n    const themeCSS = customTheme || (loadingTheme === 'gradient'\n        ? 'background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);'\n        : 'background: #2c3e50;');\n\n    return `/**\n * AppBootstrap.js - Generated by app-bootstrap-lib\n * Created: ${new Date().toISOString()}\n */\n\n(function() {\n  'use strict';\n\n  // Asset manifest\n  window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};\n\n  // Loading state\n  window.APP_BOOTSTRAP_LOADING_STATE = {\n    isLoaded: false,\n    isLoading: true,\n    progress: 0,\n    currentChunk: '',\n    loadedChunks: [],\n    totalChunks: ${assetManifest.loadingSequence.js.length},\n    error: null,\n    startTime: Date.now()\n  };\n\n  // Event emitter\n  window.APP_BOOTSTRAP_EVENTS = {\n    listeners: {},\n    on: function(event, callback) {\n      if (!this.listeners[event]) this.listeners[event] = [];\n      this.listeners[event].push(callback);\n    },\n    emit: function(event, data) {\n      if (this.listeners[event]) {\n        this.listeners[event].forEach(cb => cb(data));\n      }\n    }\n  };\n\n  // Loading screen\n  function createLoadingScreen() {\n    const loadingHTML = \\`\n      <div id=\"loading-screen\" style=\"\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        ${themeCSS}\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        color: white;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        z-index: 9999;\n      \">\n        <div style=\"\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.3);\n          border-top: 4px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 20px;\n        \"></div>\n        <p id=\"loading-text\">Loading ${appName}...</p>\n        <div id=\"loading-progress\" style=\"\n          width: 200px;\n          height: 4px;\n          background: rgba(255, 255, 255, 0.3);\n          border-radius: 2px;\n          margin-top: 10px;\n          overflow: hidden;\n        \">\n          <div id=\"progress-bar\" style=\"\n            height: 100%;\n            background: white;\n            width: 0%;\n            transition: width 0.3s ease;\n          \"></div>\n        </div>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    \\`;\n\n    document.body.insertAdjacentHTML('afterbegin', loadingHTML);\n  }\n\n  // Load assets\n  async function loadAssets() {\n    const { loadingSequence } = window.ASSET_MANIFEST;\n    const totalChunks = loadingSequence.js.length + loadingSequence.css.length;\n    let loadedChunks = 0;\n\n    // Load CSS first\n    for (const cssFile of loadingSequence.css) {\n      try {\n        await loadCSS(window.ASSET_MANIFEST.css[cssFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load CSS:', cssFile, error);\n      }\n    }\n\n    // Load JS\n    for (const jsFile of loadingSequence.js) {\n      try {\n        await loadJS(window.ASSET_MANIFEST.js[jsFile]);\n        loadedChunks++;\n        updateProgress(loadedChunks, totalChunks);\n      } catch (error) {\n        console.error('Failed to load JS:', jsFile, error);\n      }\n    }\n\n    // Complete\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoaded = true;\n    window.APP_BOOTSTRAP_LOADING_STATE.isLoading = false;\n    window.APP_BOOTSTRAP_READY = true;\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:complete');\n    hideLoadingScreen();\n  }\n\n  function loadCSS(href) {\n    return new Promise((resolve, reject) => {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = () => resolve();\n      link.onerror = () => reject(new Error('CSS load failed: ' + href));\n      document.head.appendChild(link);\n    });\n  }\n\n  function loadJS(src) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.type = 'module'; // Load as ES module\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error('JS load failed: ' + src));\n      document.head.appendChild(script);\n    });\n  }\n\n  function updateProgress(loaded, total) {\n    const progress = Math.round((loaded / total) * 100);\n    window.APP_BOOTSTRAP_LOADING_STATE.progress = progress;\n\n    const progressBar = document.getElementById('progress-bar');\n    if (progressBar) {\n      progressBar.style.width = progress + '%';\n    }\n\n    window.APP_BOOTSTRAP_EVENTS.emit('loading:progress', { progress });\n  }\n\n  function hideLoadingScreen() {\n    const loadingScreen = document.getElementById('loading-screen');\n    if (loadingScreen) {\n      loadingScreen.style.display = 'none';\n    }\n  }\n\n  // Initialize\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      createLoadingScreen();\n      loadAssets();\n    });\n  } else {\n    createLoadingScreen();\n    loadAssets();\n  }\n})();\n`;\n}\n","/**\n * Vite Plugin Server-Side Code\n * Created: 2024-07-31\n * Purpose: Isolate Node.js-specific code for the Vite plugin\n */\n\nimport type { AppBootstrapOptions } from './types';\nimport { generateAppBootstrap } from './vite-plugin-utils';\n\nexport function generateDevModeFiles(opts: Required<AppBootstrapOptions>, publicDir: string = 'public'): void {\n    const fs = require('fs');\n    const path = require('path');\n\n    // Create a minimal development asset manifest\n    const devAssetManifest = {\n        js: {\n            'main.js': '/src/main.tsx',\n        },\n        css: {},\n        loadingSequence: {\n            js: ['main.js'],\n            css: []\n        },\n        totalOriginalSize: 0,\n        buildInfo: {\n            timestamp: Date.now(),\n            version: '1.0.0-dev',\n            appName: opts.appName,\n            compressionEnabled: false,\n            chunksGenerated: 1,\n            plugin: 'app-bootstrap-lib-dev'\n        }\n    };\n\n    // Generate development AppBootstrap.js\n    const devAppBootstrapContent = generateAppBootstrap(devAssetManifest, opts);\n\n    // Write files to public directory\n    const fullPublicDir = path.join(process.cwd(), publicDir);\n\n    // Ensure public directory exists\n    if (!fs.existsSync(fullPublicDir)) {\n        fs.mkdirSync(fullPublicDir, { recursive: true });\n    }\n\n    // Write asset-manifest.js\n    const assetManifestPath = path.join(fullPublicDir, 'asset-manifest.js');\n    const assetManifestContent = `window.ASSET_MANIFEST = ${JSON.stringify(devAssetManifest, null, 2)};`;\n    fs.writeFileSync(assetManifestPath, assetManifestContent);\n\n    // Write AppBootstrap.js\n    const appBootstrapPath = path.join(fullPublicDir, opts.bootstrapFileName);\n    fs.writeFileSync(appBootstrapPath, devAppBootstrapContent);\n\n    if (opts.debugMode) {\n        console.log(`[app-bootstrap-lib] 📝 Generated development files:`);\n        console.log(`[app-bootstrap-lib] ✅ ${opts.bootstrapFileName}`);\n        console.log(`[app-bootstrap-lib] ✅ asset-manifest.js`);\n    }\n}\n","/**\n * Simplified Vite Plugin for App Bootstrap\n * Created: 2024-12-19\n * Updated: 2024-07-31\n * Purpose: Vite plugin integration for app bootstrap functionality.\n *          Separated Node.js-specific code to prevent bundling in client builds.\n */\n\nimport type { Plugin } from 'vite';\nimport type { AppBootstrapOptions, AssetManifest } from './types';\nimport { generateAppBootstrap } from './vite-plugin-utils';\nimport { generateWorkboxServiceWorker, generateServiceWorkerRegistration, generatePWAManifest, type WorkboxOptions } from './workbox';\n\n// Default chunk priorities\nconst DEFAULT_PRIORITIES = {\n    'vendor': 1,\n    'main': 2,\n    'app': 3,\n    'chunk': 4\n};\n\n/**\n * Generate chunk configuration\n */\nfunction generateChunkConfiguration(customChunks: Record<string, string[]> = {}): Record<string, string[]> {\n    const chunks: Record<string, string[]> = {\n        vendor: ['react', 'react-dom'],\n        ...customChunks\n    };\n\n    return chunks;\n}\n\n/**\n * Analyze build output and create asset manifest\n */\nfunction analyzeBuildOutput(bundle: any, priorities: Record<string, number>, assetPrefix: string = ''): AssetManifest {\n    const js: Record<string, string> = {};\n    const css: Record<string, string> = {};\n    let totalOriginalSize = 0;\n\n    // Process bundle files\n    for (const [fileName, file] of Object.entries(bundle)) {\n        const fileInfo = file as any;\n        const filePath = assetPrefix ? `${assetPrefix}/${fileName}` : `/${fileName}`;\n\n        if (fileName.endsWith('.js')) {\n            js[fileName] = filePath;\n            totalOriginalSize += fileInfo.code?.length || 0;\n        } else if (fileName.endsWith('.css')) {\n            css[fileName] = filePath;\n            totalOriginalSize += fileInfo.source?.length || 0;\n        }\n    }\n\n    // Create loading sequence based on priorities\n    const loadingSequence = {\n        js: Object.keys(js).sort((a, b) => {\n            const priorityA = priorities[a] || 999;\n            const priorityB = priorities[b] || 999;\n            return priorityA - priorityB;\n        }),\n        css: Object.keys(css)\n    };\n\n    return {\n        js,\n        css,\n        loadingSequence,\n        totalOriginalSize,\n        buildInfo: {\n            timestamp: Date.now(),\n            version: '1.0.0',\n            appName: 'App',\n            compressionEnabled: false,\n            chunksGenerated: Object.keys(js).length,\n            plugin: 'app-bootstrap-lib'\n        }\n    };\n}\n\n/**\n * Transform index.html to include bootstrap script\n */\nfunction transformIndexHtml(html: string, options: Required<AppBootstrapOptions>): string {\n    const bootstrapScript = `<script src=\"/${options.bootstrapFileName}\"></script>`;\n\n    // Insert before closing head tag\n    if (html.includes('</head>')) {\n        return html.replace('</head>', `  ${bootstrapScript}\\n</head>`);\n    }\n\n    // Insert at the beginning if no head tag\n    return bootstrapScript + '\\n' + html;\n}\n\n/**\n * Main Vite plugin function\n */\nexport default function appBootstrapPlugin(options: AppBootstrapOptions & { workbox?: WorkboxOptions } = {}): Plugin {\n    let buildAssets: AssetManifest;\n\n    // Set defaults\n    const opts: Required<AppBootstrapOptions> = {\n        enableGzip: false,\n        enableProgress: true,\n        enableFallback: true,\n        debugMode: false,\n        appName: 'Application',\n        appIcon: '⚡',\n        loadingTheme: 'gradient',\n        customTheme: '',\n        enableCDNFallback: false,\n        compressionFirst: false,\n        customChunks: {},\n        chunkPriorities: {},\n        assetPrefix: '',\n        bootstrapFileName: 'AppBootstrap.js',\n        gzipLoaderConfig: {\n            debugMode: false,\n            useGzip: false,\n            fallbackToUncompressed: true,\n            timeout: 10000,\n            retries: 3\n        },\n        ...options\n    };\n\n    // Merge priorities\n    const priorities = { ...DEFAULT_PRIORITIES, ...opts.chunkPriorities };\n\n    return {\n        name: 'app-bootstrap-lib',\n\n        async configureServer(server) {\n            // This hook is only called in serve mode, so we can safely import\n            // the server-side code here.\n            console.log('[app-bootstrap-lib] 🚀 Development server starting, generating bootstrap files...');\n            try {\n                const { generateDevModeFiles } = await import('./vite-plugin-server.js');\n                const publicDir = server.config.publicDir || 'public';\n                console.log(`[app-bootstrap-lib] 📁 Public directory: ${publicDir}`);\n                generateDevModeFiles(opts, publicDir);\n            } catch (e) {\n                console.error('[app-bootstrap-lib] Error generating dev mode files:', e);\n            }\n        },\n\n        config(config) {\n            // Configure build options\n            if (!config.build) config.build = {};\n            config.build.cssCodeSplit = true;\n\n            // Configure rollup options\n            if (!config.build.rollupOptions) config.build.rollupOptions = {};\n            if (!config.build.rollupOptions.output) config.build.rollupOptions.output = {};\n\n            // Set predictable asset names\n            const output = config.build.rollupOptions.output as any;\n            output.entryFileNames = '[name].js';\n            output.chunkFileNames = '[name].js';\n            output.assetFileNames = (assetInfo: any) => {\n                if (!assetInfo.name) return '[name].[ext]';\n                const info = assetInfo.name.split('.');\n                const ext = info[info.length - 1];\n                if (/\\.(css)$/.test(assetInfo.name)) {\n                    return `assets/[name].${ext}`;\n                }\n                return '[name].[ext]';\n            };\n\n            // Generate chunks\n            const chunks = generateChunkConfiguration(opts.customChunks);\n            output.manualChunks = chunks;\n\n            if (opts.debugMode) {\n                console.log('[app-bootstrap-lib] App name:', opts.appName);\n                console.log('[app-bootstrap-lib] Theme:', opts.loadingTheme);\n            }\n\n            return config;\n        },\n\n        transformIndexHtml(html) {\n            return transformIndexHtml(html, opts);\n        },\n\n        generateBundle(_options: any, bundle: any) {\n            // Analyze build output\n            buildAssets = analyzeBuildOutput(bundle, priorities, opts.assetPrefix);\n\n            // Generate asset manifest\n            const assetManifest = {\n                ...buildAssets,\n                buildInfo: {\n                    ...buildAssets.buildInfo,\n                    appName: opts.appName,\n                    compressionEnabled: opts.enableGzip,\n                    plugin: 'app-bootstrap-lib'\n                }\n            };\n\n            // Add asset manifest to bundle\n            this.emitFile({\n                type: 'asset',\n                fileName: 'asset-manifest.js',\n                source: `window.ASSET_MANIFEST = ${JSON.stringify(assetManifest, null, 2)};`\n            });\n\n            // Generate AppBootstrap.js\n            const appBootstrapContent = generateAppBootstrap(assetManifest, opts);\n\n            this.emitFile({\n                type: 'asset',\n                fileName: opts.bootstrapFileName,\n                source: appBootstrapContent\n            });\n\n            // Generate Workbox service worker if enabled\n            if (options.workbox?.enabled !== false) {\n                const workboxOptions = options.workbox || {};\n                const serviceWorkerContent = generateWorkboxServiceWorker(assetManifest, opts, workboxOptions);\n\n                this.emitFile({\n                    type: 'asset',\n                    fileName: 'sw.js',\n                    source: serviceWorkerContent\n                });\n\n                // Generate PWA manifest\n                const manifestContent = generatePWAManifest(opts, workboxOptions);\n\n                this.emitFile({\n                    type: 'asset',\n                    fileName: 'manifest.webmanifest',\n                    source: manifestContent\n                });\n\n                // Generate service worker registration script\n                const registrationScript = generateServiceWorkerRegistration(opts, workboxOptions);\n                if (registrationScript) {\n                    this.emitFile({\n                        type: 'asset',\n                        fileName: 'registerSW.js',\n                        source: registrationScript\n                    });\n                }\n\n                if (opts.debugMode) {\n                    console.log(`[app-bootstrap-lib] 🔧 Generated Workbox service worker`);\n                    console.log(`[app-bootstrap-lib] 📱 Generated PWA manifest`);\n                }\n            }\n\n            if (opts.debugMode) {\n                console.log(`[app-bootstrap-lib] ✅ Generated ${opts.bootstrapFileName}`);\n                console.log(`[app-bootstrap-lib] 📦 Assets: ${Object.keys(buildAssets.js).length} JS, ${Object.keys(buildAssets.css).length} CSS`);\n            }\n        }\n    };\n}\n\n// Named exports\nexport { appBootstrapPlugin };\n","/**\n * Workbox Integration for App Bootstrap Library\n * Created: 2024-07-31\n * Purpose: Provides PWA functionality with service worker generation and caching strategies\n */\n\nimport type { AppBootstrapOptions, AssetManifest } from './types';\n\nexport interface WorkboxOptions {\n    /** Enable/disable Workbox integration */\n    enabled?: boolean;\n    /** Cache name prefix */\n    cacheNamePrefix?: string;\n    /** Cache strategies for different file types */\n    strategies?: {\n        /** Strategy for JavaScript files */\n        js?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for CSS files */\n        css?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for images */\n        images?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for HTML files */\n        html?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n        /** Strategy for API calls */\n        api?: 'cache-first' | 'stale-while-revalidate' | 'network-first';\n    };\n    /** Cache expiration settings */\n    expiration?: {\n        /** Maximum number of entries in cache */\n        maxEntries?: number;\n        /** Maximum age in seconds */\n        maxAgeSeconds?: number;\n    };\n    /** Precache assets */\n    precache?: boolean;\n    /** Background sync for offline actions */\n    backgroundSync?: boolean;\n}\n\nconst DEFAULT_WORKBOX_OPTIONS: Required<WorkboxOptions> = {\n    enabled: true,\n    cacheNamePrefix: 'celebrity-box',\n    strategies: {\n        js: 'stale-while-revalidate',\n        css: 'stale-while-revalidate',\n        images: 'cache-first',\n        html: 'network-first',\n        api: 'network-first'\n    },\n    expiration: {\n        maxEntries: 100,\n        maxAgeSeconds: 86400 // 24 hours\n    },\n    precache: true,\n    backgroundSync: false\n};\n\n/**\n * Generate Workbox service worker content\n */\nexport function generateWorkboxServiceWorker(\n    assetManifest: AssetManifest,\n    options: AppBootstrapOptions,\n    workboxOptions: WorkboxOptions = {}\n): string {\n    const opts = { ...DEFAULT_WORKBOX_OPTIONS, ...workboxOptions };\n\n    if (!opts.enabled) {\n        return generateMinimalServiceWorker(assetManifest, options);\n    }\n\n    const cacheName = `${opts.cacheNamePrefix}-v1`;\n    const { appName } = options;\n\n    return `/**\n * Service Worker - Generated by @basirah/app-bootstrap-lib\n * App: ${appName}\n * Created: ${new Date().toISOString()}\n */\n\nconst CACHE_NAME = '${cacheName}';\nconst STATIC_CACHE = '${cacheName}-static';\nconst DYNAMIC_CACHE = '${cacheName}-dynamic';\n\n// Assets to precache\nconst PRECACHE_ASSETS = [\n  '/',\n  '/index.html',\n  '/AppBootstrap.js',\n  '/asset-manifest.js',\n${assetManifest.loadingSequence.js.map(js => `  '/${js}',`).join('\\n')}\n${assetManifest.loadingSequence.css.map(css => `  '/${css}',`).join('\\n')}\n];\n\n// Install event - precache assets\nself.addEventListener('install', (event) => {\n  console.log('[SW] Installing service worker...');\n  event.waitUntil(\n    caches.open(STATIC_CACHE)\n      .then((cache) => {\n        console.log('[SW] Pre-caching app shell');\n        return cache.addAll(PRECACHE_ASSETS);\n      })\n      .then(() => {\n        console.log('[SW] Successfully installed');\n        return self.skipWaiting();\n      })\n  );\n});\n\n// Activate event - clean up old caches\nself.addEventListener('activate', (event) => {\n  console.log('[SW] Activating service worker...');\n  event.waitUntil(\n    caches.keys()\n      .then((cacheNames) => {\n        return Promise.all(\n          cacheNames.map((cacheName) => {\n            if (cacheName !== STATIC_CACHE && cacheName !== DYNAMIC_CACHE) {\n              console.log('[SW] Deleting old cache:', cacheName);\n              return caches.delete(cacheName);\n            }\n          })\n        );\n      })\n      .then(() => {\n        console.log('[SW] Successfully activated');\n        return self.clients.claim();\n      })\n  );\n});\n\n// Fetch event - handle requests\nself.addEventListener('fetch', (event) => {\n  const { request } = event;\n  const url = new URL(request.url);\n\n  // Skip non-GET requests\n  if (request.method !== 'GET') {\n    return;\n  }\n\n  // Handle different file types with different strategies\n  if (url.pathname.endsWith('.js')) {\n    event.respondWith(handleJSRequest(request));\n  } else if (url.pathname.endsWith('.css')) {\n    event.respondWith(handleCSSRequest(request));\n  } else if (url.pathname.match(/\\\\.(png|jpg|jpeg|svg|gif|ico)$/)) {\n    event.respondWith(handleImageRequest(request));\n  } else if (url.pathname.startsWith('/api/')) {\n    event.respondWith(handleAPIRequest(request));\n  } else {\n    event.respondWith(handleHTMLRequest(request));\n  }\n});\n\n// Cache First strategy for images\nasync function handleImageRequest(request) {\n  try {\n    const cachedResponse = await caches.match(request);\n    if (cachedResponse) {\n      return cachedResponse;\n    }\n\n    const networkResponse = await fetch(request);\n    if (networkResponse.ok) {\n      const cache = await caches.open(DYNAMIC_CACHE);\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  } catch (error) {\n    console.error('[SW] Image fetch failed:', error);\n    return new Response('Image not available', { status: 404 });\n  }\n}\n\n// Stale While Revalidate for JS/CSS\nasync function handleJSRequest(request) {\n  return handleStaleWhileRevalidate(request, STATIC_CACHE);\n}\n\nasync function handleCSSRequest(request) {\n  return handleStaleWhileRevalidate(request, STATIC_CACHE);\n}\n\n// Network First for HTML\nasync function handleHTMLRequest(request) {\n  try {\n    const networkResponse = await fetch(request);\n    if (networkResponse.ok) {\n      const cache = await caches.open(DYNAMIC_CACHE);\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  } catch (error) {\n    console.log('[SW] Network failed, trying cache...');\n    const cachedResponse = await caches.match(request);\n    if (cachedResponse) {\n      return cachedResponse;\n    }\n    return caches.match('/index.html');\n  }\n}\n\n// Network First for API calls\nasync function handleAPIRequest(request) {\n  try {\n    const networkResponse = await fetch(request);\n    if (networkResponse.ok) {\n      const cache = await caches.open(DYNAMIC_CACHE);\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  } catch (error) {\n    console.log('[SW] API network failed, trying cache...');\n    return await caches.match(request);\n  }\n}\n\n// Stale While Revalidate strategy\nasync function handleStaleWhileRevalidate(request, cacheName) {\n  const cache = await caches.open(cacheName);\n  const cachedResponse = await cache.match(request);\n\n  const fetchPromise = fetch(request).then((networkResponse) => {\n    if (networkResponse.ok) {\n      cache.put(request, networkResponse.clone());\n    }\n    return networkResponse;\n  }).catch(() => {\n    console.log('[SW] Network failed for:', request.url);\n  });\n\n  return cachedResponse || fetchPromise;\n}\n\n// Background sync for offline actions\nself.addEventListener('sync', (event) => {\n  if (event.tag === 'background-sync') {\n    console.log('[SW] Background sync triggered');\n    event.waitUntil(doBackgroundSync());\n  }\n});\n\nasync function doBackgroundSync() {\n  // Handle offline actions here\n  console.log('[SW] Processing background sync...');\n}\n\n// Push notifications\nself.addEventListener('push', (event) => {\n  const options = {\n    body: event.data ? event.data.text() : 'New notification from ${appName}',\n    icon: '/icon-192x192.png',\n    badge: '/icon-192x192.png',\n    vibrate: [100, 50, 100],\n    data: {\n      dateOfArrival: Date.now(),\n      primaryKey: 1\n    }\n  };\n\n  event.waitUntil(\n    self.registration.showNotification('${appName}', options)\n  );\n});\n\n// Notification click\nself.addEventListener('notificationclick', (event) => {\n  event.notification.close();\n  event.waitUntil(\n    clients.openWindow('/')\n  );\n});\n\nconsole.log('[SW] Service worker loaded successfully');\n`;\n}\n\n/**\n * Generate minimal service worker (fallback)\n */\nfunction generateMinimalServiceWorker(\n    _assetManifest: AssetManifest,\n    options: AppBootstrapOptions\n): string {\n    return `/**\n * Minimal Service Worker - Generated by @basirah/app-bootstrap-lib\n * App: ${options.appName}\n * Created: ${new Date().toISOString()}\n */\n\nself.addEventListener('install', (event) => {\n  console.log('[SW] Installing minimal service worker...');\n  self.skipWaiting();\n});\n\nself.addEventListener('activate', (event) => {\n  console.log('[SW] Activating minimal service worker...');\n  self.clients.claim();\n});\n\nself.addEventListener('fetch', (event) => {\n  // Basic caching for offline support\n  event.respondWith(\n    caches.match(event.request)\n      .then((response) => {\n        return response || fetch(event.request);\n      })\n  );\n});\n\nconsole.log('[SW] Minimal service worker loaded');\n`;\n}\n\n/**\n * Generate service worker registration script\n */\nexport function generateServiceWorkerRegistration(\n    options: AppBootstrapOptions,\n    workboxOptions: WorkboxOptions = {}\n): string {\n    const opts = { ...DEFAULT_WORKBOX_OPTIONS, ...workboxOptions };\n\n    if (!opts.enabled) {\n        return '';\n    }\n\n    return `/**\n * Service Worker Registration - Generated by @basirah/app-bootstrap-lib\n * App: ${options.appName}\n */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/sw.js')\n      .then((registration) => {\n        console.log('[SW] Registration successful:', registration.scope);\n\n        // Handle updates\n        registration.addEventListener('updatefound', () => {\n          const newWorker = registration.installing;\n          newWorker.addEventListener('statechange', () => {\n            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n              // New content is available\n              console.log('[SW] New content available');\n              // You can show a notification to the user here\n            }\n          });\n        });\n      })\n      .catch((error) => {\n        console.error('[SW] Registration failed:', error);\n      });\n  });\n}\n\n// Background sync registration\nif ('serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype) {\n  navigator.serviceWorker.ready.then((registration) => {\n    // Register background sync\n    registration.sync.register('background-sync');\n  });\n}\n`;\n}\n\n/**\n * Generate PWA manifest with Workbox integration\n */\nexport function generatePWAManifest(\n    options: AppBootstrapOptions,\n    _workboxOptions: WorkboxOptions = {}\n): string {\n    const manifest = {\n        name: options.appName || 'App',\n        short_name: (options.appName || 'App').replace(/\\s+/g, '').substring(0, 12),\n        description: `PWA for ${options.appName || 'App'} with offline support`,\n        theme_color: options.loadingTheme === 'gradient' ? '#667eea' : '#2c3e50',\n        background_color: '#ffffff',\n        display: 'standalone',\n        orientation: 'portrait',\n        scope: '/',\n        start_url: '/',\n        icons: [\n            {\n                src: '/icon-192x192.png',\n                sizes: '192x192',\n                type: 'image/png'\n            },\n            {\n                src: '/icon-512x512.png',\n                sizes: '512x512',\n                type: 'image/png'\n            },\n            {\n                src: '/icon-512x512.png',\n                sizes: '512x512',\n                type: 'image/png',\n                purpose: 'maskable'\n            }\n        ],\n        categories: ['utilities', 'productivity'],\n        shortcuts: [\n            {\n                name: 'Home',\n                short_name: 'Home',\n                description: 'Go to home page',\n                url: '/',\n                icons: [{ src: '/icon-192x192.png', sizes: '192x192' }]\n            }\n        ]\n    };\n\n    return JSON.stringify(manifest, null, 2);\n}\n","/**\n * Simplified React Hooks for App Bootstrap\n * Created: 2024-12-19\n * Purpose: React integration for app bootstrap functionality\n */\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport type { UseAppBootstrapReturn, LoadingState, AssetManifest, AppBootstrapConfig } from './types';\n\n// Simple event emitter for app bootstrap events\nclass AppBootstrapEvents {\n    private listeners: Record<string, Function[]> = {};\n\n    on(event: string, callback: Function): () => void {\n        if (!this.listeners[event]) {\n            this.listeners[event] = [];\n        }\n        this.listeners[event].push(callback);\n\n        return () => {\n            this.listeners[event] = this.listeners[event].filter(cb => cb !== callback);\n        };\n    }\n\n    emit(event: string, data?: any): void {\n        if (this.listeners[event]) {\n            this.listeners[event].forEach(callback => callback(data));\n        }\n    }\n}\n\n// Global event emitter instance\nexport const appBootstrapEvents = new AppBootstrapEvents();\n\n// Utility functions\nfunction getAssetManifest(): AssetManifest | null {\n    return (window as any).ASSET_MANIFEST || null;\n}\n\nfunction isAppBootstrapReady(): boolean {\n    return (window as any).APP_BOOTSTRAP_READY === true;\n}\n\nfunction getCurrentLoadingState(): LoadingState | null {\n    return (window as any).APP_BOOTSTRAP_LOADING_STATE || null;\n}\n\n/**\n * Main hook for app bootstrap integration\n */\nexport function useAppBootstrap(config: AppBootstrapConfig = {}): UseAppBootstrapReturn {\n    const [loadingState, setLoadingState] = useState<LoadingState>({\n        isLoaded: false,\n        isLoading: false,\n        progress: 0,\n        currentChunk: '',\n        loadedChunks: [],\n        totalChunks: 0,\n        error: null,\n        startTime: Date.now()\n    });\n\n    const [assetManifest, setAssetManifest] = useState<AssetManifest | null>(null);\n    const [error, setError] = useState<string | null>(null);\n    const isReady = useRef(false);\n\n    // Initialize loading state\n    useEffect(() => {\n        const currentState = getCurrentLoadingState();\n        const currentManifest = getAssetManifest();\n\n        if (currentState) {\n            setLoadingState(currentState);\n        }\n\n        if (currentManifest) {\n            setAssetManifest(currentManifest);\n        }\n\n        // Check if already ready\n        if (isAppBootstrapReady()) {\n            isReady.current = true;\n            setLoadingState(prev => ({\n                ...prev,\n                isLoaded: true,\n                isLoading: false,\n                progress: 100\n            }));\n        }\n    }, []);\n\n    // Set up event listeners\n    useEffect(() => {\n        const unsubscribeStart = appBootstrapEvents.on('loading:start', (_event: any) => {\n            setLoadingState(prev => ({\n                ...prev,\n                isLoading: true,\n                isLoaded: false,\n                startTime: Date.now(),\n                error: null\n            }));\n            setError(null);\n        });\n\n        const unsubscribeProgress = appBootstrapEvents.on('loading:progress', (event: any) => {\n            setLoadingState(prev => ({\n                ...prev,\n                progress: event.data?.progress || prev.progress\n            }));\n        });\n\n        const unsubscribeComplete = appBootstrapEvents.on('loading:complete', (_event: any) => {\n            isReady.current = true;\n            setLoadingState(prev => ({\n                ...prev,\n                isLoaded: true,\n                isLoading: false,\n                progress: 100,\n                endTime: Date.now(),\n                duration: Date.now() - prev.startTime\n            }));\n        });\n\n        const unsubscribeError = appBootstrapEvents.on('loading:error', (event: any) => {\n            const errorMessage = event.data?.error || 'Unknown loading error';\n            setError(errorMessage);\n            setLoadingState(prev => ({\n                ...prev,\n                isLoading: false,\n                error: errorMessage\n            }));\n        });\n\n        const unsubscribeManifestLoaded = appBootstrapEvents.on('manifest:loaded', (event: any) => {\n            setAssetManifest(event.data?.manifest);\n        });\n\n        // Cleanup function\n        return () => {\n            unsubscribeStart();\n            unsubscribeProgress();\n            unsubscribeComplete();\n            unsubscribeError();\n            unsubscribeManifestLoaded();\n        };\n    }, []);\n\n    // Poll for asset manifest if not available\n    useEffect(() => {\n        if (assetManifest || !config.enableDebug) return;\n\n        const pollInterval = setInterval(() => {\n            const manifest = getAssetManifest();\n            if (manifest) {\n                setAssetManifest(manifest);\n                clearInterval(pollInterval);\n            }\n        }, 100);\n\n        return () => clearInterval(pollInterval);\n    }, [assetManifest, config.enableDebug]);\n\n    // Development mode detection and ready state\n    useEffect(() => {\n        if (isReady.current) return;\n\n        // In development mode, detect when React app is mounted and ready\n        const checkDevReady = () => {\n            // Check if React app is mounted and DOM is ready\n            const rootElement = document.getElementById('root');\n            if (rootElement && rootElement.children.length > 0) {\n                // Check if the app content is actually rendered\n                const appContent = rootElement.querySelector('.app, .home-page, .system-config-page, .video-player-page');\n                if (appContent) {\n                    console.log('[useAppBootstrap] Development mode: App content detected, marking as ready');\n                    isReady.current = true;\n                    setLoadingState(prev => ({\n                        ...prev,\n                        isLoaded: true,\n                        isLoading: false,\n                        progress: 100,\n                        endTime: Date.now(),\n                        duration: Date.now() - prev.startTime\n                    }));\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Try immediately\n        if (checkDevReady()) return;\n\n        // Poll for app content in development mode\n        const pollInterval = setInterval(() => {\n            if (checkDevReady()) {\n                clearInterval(pollInterval);\n            }\n        }, 100);\n\n        // Fallback timeout\n        const timeout = setTimeout(() => {\n            clearInterval(pollInterval);\n            if (!isReady.current) {\n                console.log('[useAppBootstrap] Development mode: Fallback timeout, marking as ready');\n                isReady.current = true;\n                setLoadingState(prev => ({\n                    ...prev,\n                    isLoaded: true,\n                    isLoading: false,\n                    progress: 100,\n                    endTime: Date.now(),\n                    duration: Date.now() - prev.startTime\n                }));\n            }\n        }, 3000); // 3 second timeout\n\n        return () => {\n            clearInterval(pollInterval);\n            clearTimeout(timeout);\n        };\n    }, []);\n\n    // Retry function\n    const retry = useCallback(() => {\n        setError(null);\n        setLoadingState(prev => ({\n            ...prev,\n            error: null,\n            isLoading: true,\n            isLoaded: false,\n            startTime: Date.now()\n        }));\n\n        appBootstrapEvents.emit('loading:retry', { timestamp: Date.now() });\n    }, []);\n\n    // Get chunk progress\n    const getChunkProgress = useCallback((chunkName: string): number => {\n        if (!assetManifest) return 0;\n        const chunk = assetManifest.js[chunkName];\n        return chunk ? 100 : 0;\n    }, [assetManifest]);\n\n    // Get overall progress\n    const getOverallProgress = useCallback((): number => {\n        return loadingState.progress;\n    }, [loadingState.progress]);\n\n    // Debug logging\n    useEffect(() => {\n        if (config.enableDebug) {\n            console.log('[useAppBootstrap] Loading state:', loadingState);\n            console.log('[useAppBootstrap] Asset manifest:', assetManifest);\n            console.log('[useAppBootstrap] Error:', error);\n        }\n    }, [loadingState, assetManifest, error, config.enableDebug]);\n\n    return {\n        loadingState,\n        assetManifest,\n        isReady: isReady.current,\n        error,\n        retry,\n        getChunkProgress,\n        getOverallProgress\n    };\n}\n\n/**\n * Simplified hook for basic app bootstrap status\n */\nexport function useAppBootstrapStatus() {\n    const { loadingState, isReady, error } = useAppBootstrap();\n\n    return {\n        isReady,\n        isLoading: loadingState.isLoading,\n        isLoaded: loadingState.isLoaded,\n        progress: loadingState.progress,\n        error,\n        currentChunk: loadingState.currentChunk\n    };\n}\n\n/**\n * Hook for app bootstrap with custom configuration\n */\nexport function useAppBootstrapWithConfig(config: AppBootstrapConfig) {\n    return useAppBootstrap(config);\n}\n\n// Export event emitter for external use\n// Note: appBootstrapEvents is already exported above\n","/**\n * Simplified Cache Manager\n * Created: 2024-12-19\n * Purpose: Unified cache management for app bootstrap\n */\n\nimport type { CacheManagerConfig, CacheManager } from './types';\n\nexport class AppCacheManager implements CacheManager {\n    private loadingElement: HTMLElement | null;\n    private config: CacheManagerConfig;\n\n    constructor(config: CacheManagerConfig = {}) {\n        this.config = {\n            cacheName: 'app-bootstrap-v1',\n            appVersion: '1.0.0',\n            enableServiceWorker: true,\n            loadingScreen: {\n                theme: 'gradient'\n            },\n            ...config\n        };\n\n        this.loadingElement = null;\n    }\n\n    async init(): Promise<void> {\n        console.log('App Cache Manager initializing...');\n        this.setupLoadingScreen();\n        await this.loadApp();\n    }\n\n    private setupLoadingScreen(): void {\n        const theme = this.config.loadingScreen?.theme || 'gradient';\n        const customHTML = this.config.loadingScreen?.customHTML;\n\n        const loadingHTML = customHTML || this.getDefaultLoadingHTML(theme);\n        document.body.insertAdjacentHTML('afterbegin', loadingHTML);\n        this.loadingElement = document.getElementById('loading-screen');\n    }\n\n    private getDefaultLoadingHTML(theme: string): string {\n        const baseStyles = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      color: white;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      z-index: 9999;\n    `;\n\n        const background = theme === 'gradient'\n            ? 'background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);'\n            : 'background: #2c3e50;';\n\n        return `\n      <div id=\"loading-screen\" style=\"${baseStyles} ${background}\">\n        <div style=\"\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.3);\n          border-top: 4px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 20px;\n        \"></div>\n        <p id=\"loading-text\">Loading Application...</p>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    `;\n    }\n\n    updateLoadingText(text: string): void {\n        const loadingText = document.getElementById('loading-text');\n        if (loadingText) {\n            loadingText.textContent = text;\n        }\n    }\n\n    private async loadApp(): Promise<void> {\n        this.updateLoadingText('Loading application...');\n\n        // Wait for app to load, then hide loading screen\n        setTimeout(() => {\n            this.hideLoadingScreen();\n        }, 2000);\n    }\n\n    hideLoadingScreen(): void {\n        if (this.loadingElement) {\n            this.loadingElement.style.display = 'none';\n        }\n    }\n\n    showError(message: string): void {\n        if (this.loadingElement) {\n            this.loadingElement.innerHTML = `\n        <div style=\"text-align: center;\">\n          <h3>Error</h3>\n          <p>${message}</p>\n          <button onclick=\"location.reload()\" style=\"\n            background: white;\n            color: #667eea;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            margin-top: 10px;\n          \">Retry</button>\n        </div>\n      `;\n        }\n    }\n\n    retry(): void {\n        location.reload();\n    }\n\n    // Service Worker registration - removed to simplify\n}\n\n// Auto-initialize when DOM is ready\nexport function initializeCacheManager(config?: CacheManagerConfig): AppCacheManager {\n    const manager = new AppCacheManager(config);\n\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => {\n            manager.init();\n        });\n    } else {\n        manager.init();\n    }\n\n    return manager;\n}\n\n// Default export\nexport default AppCacheManager;\n"]}